<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jaejin's blog</title><link>https://jaejin0me.github.io/</link><description>Recent content on Jaejin's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Jaejin Jang</copyright><lastBuildDate>Sat, 21 May 2022 07:12:52 +0900</lastBuildDate><atom:link href="https://jaejin0me.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://jaejin0me.github.io/about/</link><pubDate>Sun, 20 Aug 2017 21:38:52 +0900</pubDate><guid>https://jaejin0me.github.io/about/</guid><description>Jaejin Jang Work Experience Korea Testing Laboratory, Software Engineer (2020.10 ~ ) Certiplanner(Mobile Device Testing &amp;amp; Certification Solution) Development, Full-stack Genians, Software Engineer (2018.03 ~ 2020.09) Genian NAC(Network Access Control) Development, Engine Education BSc in Electronics Engineering from KNU
MEng in Electronics Engineering from KNU
Links Email jaejin0me@gmail.com Blog jaejin0me.github.io Github github.com/jaejin0me Linkedin linkedin.</description></item><item><title>서피스 고3 우분투에서 LTE 잡기</title><link>https://jaejin0me.github.io/post/20220521/</link><pubDate>Sat, 21 May 2022 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220521/</guid><description>이번에 서피스 고3 LTE 를 구매했습니다. 우분투 22.04 LTS 버전을 추가로 설치하여 듀얼부팅으로 사용하고 있는데요, LTE 연결할 때 사용자가 확인해줘야할 부분이 있어서 공유</description></item><item><title>에휴 바보</title><link>https://jaejin0me.github.io/post/20220411/</link><pubDate>Mon, 11 Apr 2022 22:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220411/</guid><description>바보~!</description></item><item><title>몰입! 자바스크립트 - 29장 자바스크립트 활용</title><link>https://jaejin0me.github.io/post/20220325/</link><pubDate>Fri, 25 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220325/</guid><description>이력 2022.03.25 5절까지 포스팅 2022.03.26 7절 제외하고 11절까지 포스팅 ​모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?</description></item><item><title>몰입! 자바스크립트 - 28장 자바스크립트 객체 지향 프로그래밍</title><link>https://jaejin0me.github.io/post/20220322/</link><pubDate>Tue, 22 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220322/</guid><description>이력 2022.03.22 6절까지 포스팅 2022.03.24 10절까지 포스팅 ​모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo</description></item><item><title>몰입! 자바스크립트 - 27장 this 바인딩 오브젝트</title><link>https://jaejin0me.github.io/post/20220319/</link><pubDate>Sat, 19 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220319/</guid><description>이력 2022.03.19 8절까지 포스팅 2022.03.20 15절까지 포스팅 ​모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo</description></item><item><title>몰입! 자바스크립트 - 26장 Function 인스턴스</title><link>https://jaejin0me.github.io/post/20220316/</link><pubDate>Wed, 16 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220316/</guid><description>이력 2022.03.16 1절 포스팅 2022.03.16 6절 까지 포스팅 2022.03.18 14절 까지 포스팅 ​모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?</description></item><item><title>몰입! 자바스크립트 - 25장 실행 컨텍스트</title><link>https://jaejin0me.github.io/post/20220314/</link><pubDate>Mon, 14 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220314/</guid><description>이력 2022.03.14 포스팅 2022.03.15 수정 2022.03.16 수정 ​모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중</description></item><item><title>몰입! 자바스크립트 - 22장 아규먼트 오브젝트</title><link>https://jaejin0me.github.io/post/20220303/</link><pubDate>Thu, 03 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220303/</guid><description>이력 2022.03.03 포스팅 2022.03.09 그림 추가 ​모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 24장 렉시컬 환경</title><link>https://jaejin0me.github.io/post/20220210/</link><pubDate>Thu, 10 Feb 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220210/</guid><description>이력 2022.02.10 포스팅 ​ ​모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생</description></item><item><title>몰입! 자바스크립트 - 23장 스코프</title><link>https://jaejin0me.github.io/post/20220203/</link><pubDate>Thu, 03 Feb 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220203/</guid><description>이력 2022.02.03 포스팅 ​모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각</description></item><item><title>행복해</title><link>https://jaejin0me.github.io/post/20220127/</link><pubDate>Thu, 27 Jan 2022 11:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220127/</guid><description>오늘 꽃을 선물로 주었습니다. 원래 고백할 때 주려고 했는데, 예상치 못한 고백이 되어버려서 못줬었어요. 뜬금없게 주긴 했지만 행복해하는 모습에 저마저도 행복해지</description></item><item><title>이게 무슨 일이람</title><link>https://jaejin0me.github.io/post/20211225/</link><pubDate>Sat, 25 Dec 2021 11:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211225/</guid><description>말도 안되게 귀엽고 예쁘고 바른 사람과 만나게 되었습니다. 정말 이게 무슨일인가 싶어요 전생에 좋은 일을 많이 했나? ㅎㅎ 어떻게 이런 복이 있죠? 믿기지가 않아요</description></item><item><title>몰입! 자바스크립트 - 21 Function 오브젝트 구조, 구성</title><link>https://jaejin0me.github.io/post/20211208/</link><pubDate>Wed, 08 Dec 2021 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211208/</guid><description>이력 2021.12.08 포스팅 드디어.. 아키텍처와 메커니즘 파트로 들어왔네요 ㅎㅎ, 이제부터는 글도 많고 내용도 조금 어렵습니다. 되게 당연한 내용들도 있지만 계속 읽어보면서</description></item><item><title>몰입! 자바스크립트 - 20 Object 5th 오브젝트</title><link>https://jaejin0me.github.io/post/20211123/</link><pubDate>Tue, 23 Nov 2021 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211123/</guid><description>이력 2021.11.23 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 19 Date 오브젝트</title><link>https://jaejin0me.github.io/post/20211119_2/</link><pubDate>Fri, 19 Nov 2021 17:21:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211119_2/</guid><description>이력 2021.11.19 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 18 Math 오브젝트</title><link>https://jaejin0me.github.io/post/20211119/</link><pubDate>Fri, 19 Nov 2021 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211119/</guid><description>이력 2021.11.19 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 17 Function 오브젝트</title><link>https://jaejin0me.github.io/post/20211117_2/</link><pubDate>Wed, 17 Nov 2021 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211117_2/</guid><description>이력 2021.11.17 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 16 Function 오브젝트</title><link>https://jaejin0me.github.io/post/20211117/</link><pubDate>Wed, 17 Nov 2021 17:19:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211117/</guid><description>이력 2021.11.17 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 15 JSON 오브젝트</title><link>https://jaejin0me.github.io/post/20211108_2/</link><pubDate>Mon, 08 Nov 2021 17:19:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211108_2/</guid><description>이력 2021.11.08 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 14 Array 5th 오브젝트</title><link>https://jaejin0me.github.io/post/20211108/</link><pubDate>Mon, 08 Nov 2021 17:14:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211108/</guid><description>이력 2021.11.08 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 13 Array 오브젝트</title><link>https://jaejin0me.github.io/post/20211105_2/</link><pubDate>Fri, 05 Nov 2021 17:14:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211105_2/</guid><description>이력 2021.11.05 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 12 Number 오브젝트</title><link>https://jaejin0me.github.io/post/20211105/</link><pubDate>Fri, 05 Nov 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211105/</guid><description>이력 2021.11.05 포스팅 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 11 String 오브젝트</title><link>https://jaejin0me.github.io/post/20211009_2/</link><pubDate>Sat, 09 Oct 2021 20:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211009_2/</guid><description>이력 2021.10.09 포스팅 2021.11.26 사소한 수정 ​ 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중</description></item><item><title>몰입! 자바스크립트 - 10 글로벌 오브젝트</title><link>https://jaejin0me.github.io/post/20211009/</link><pubDate>Sat, 09 Oct 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211009/</guid><description>이력 2021.10.08 포스팅 2021.11.26 사소한 수정 ​ 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중</description></item><item><title>몰입! 자바스크립트 - 09 Object 오브젝트</title><link>https://jaejin0me.github.io/post/20211005/</link><pubDate>Tue, 05 Oct 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211005/</guid><description>이력 2021.10.05 포스팅 2021.11.26 사소한 수정 ​ 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중</description></item><item><title>몰입! 자바스크립트 - 08 자바스크립트의 언어적 개념</title><link>https://jaejin0me.github.io/post/20211004/</link><pubDate>Mon, 04 Oct 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211004/</guid><description>이력 2021.10.04 포스팅 2021.11.25 사소한 수정 2021.11.26 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하</description></item><item><title>몰입! 자바스크립트 - 07 문장</title><link>https://jaejin0me.github.io/post/20210930/</link><pubDate>Thu, 30 Sep 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210930/</guid><description>이력 2021.09.30 포스팅 2021.11.25 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 06 비트, 기타 연산자</title><link>https://jaejin0me.github.io/post/20210810/</link><pubDate>Tue, 10 Aug 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210810/</guid><description>이력 2021.08.10 포스팅 2021.11.25 사소한 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요</description></item><item><title>몰입! 자바스크립트 - 05 관계, 동등, 일치, 논리 연산자</title><link>https://jaejin0me.github.io/post/20210802_2/</link><pubDate>Mon, 02 Aug 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210802_2/</guid><description>이력 2021.08.02 포스팅 2021.11.25 약간 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하</description></item><item><title>몰입! 자바스크립트 - 04 할당, 산술, 단항 연산자</title><link>https://jaejin0me.github.io/post/20210802/</link><pubDate>Mon, 02 Aug 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210802/</guid><description>이력 2021.08.01 포스팅 2021.11.25 약간 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하</description></item><item><title>몰입! 자바스크립트 - 03 데이터 타입</title><link>https://jaejin0me.github.io/post/20210801/</link><pubDate>Sun, 01 Aug 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210801/</guid><description>이력 2021.08.01 포스팅 2021.11.25 약간 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하</description></item><item><title>몰입! 자바스크립트 - 02 자바스크립트 문법</title><link>https://jaejin0me.github.io/post/20210725/</link><pubDate>Sun, 25 Jul 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210725/</guid><description>이력 2021.07.25 포스팅 2021.11.25 약간 수정 모든 내용을 상세히 담으려 하지 않았습니다. 제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하</description></item><item><title>몰입! 자바스크립트 - 01 자바스크립트 개요</title><link>https://jaejin0me.github.io/post/20210720/</link><pubDate>Tue, 20 Jul 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210720/</guid><description>이력 2021.07.20 포스팅 2021.07.25 약간 수정 2021.11.25 약간 수정 그동안 미루고 미뤄왔던 몰입! 자바스크립트를 제대로 보려고 합니다. 매일매일 읽고, 읽는 부분만큼 요약해서 업로드하겠습니</description></item><item><title>와 시간빠르다</title><link>https://jaejin0me.github.io/post/20210426/</link><pubDate>Mon, 26 Apr 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210426/</guid><description>벌써 4월 26일이라니.. 작년에 비해서 시간이 총알같이 가네.. 체감상 한 3배는 더 빠른듯?? 쿠팡은 요즘엔 글을 올리지도 않는데 왜 수익이 나는것인지.. 신기</description></item><item><title>플러터 이미지와 폰트 추가하기</title><link>https://jaejin0me.github.io/post/posts200/</link><pubDate>Tue, 20 Apr 2021 23:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts200/</guid><description>이미지 추가하기 적당한 폴더에 이미지를 저장한다. pubspec.yaml 의 aseets 에 이미지를 추가한다. 이미지를 호출하는 방법은 크게 3가지 file : 외부의 파일을 사용 asset : 앱에 미리 넣어놓</description></item><item><title>플러터 위젯 사용법</title><link>https://jaejin0me.github.io/post/posts199/</link><pubDate>Mon, 19 Apr 2021 00:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts199/</guid><description>머티리얼 디자인을 통해 일관된 디자인을 제공할 수 있음 스캐폴드(scaffold) 클래스를 통해 머티리얼 디자인 레이아웃으로 개발 가능함 Scaffold 클래스 더 활용해보</description></item><item><title>플러터 위젯의 생명주기</title><link>https://jaejin0me.github.io/post/posts198/</link><pubDate>Fri, 16 Apr 2021 00:05:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts198/</guid><description>StatelessWidget - 생명주기 없음 StatefulWidget - 10단계의 생명주기를 가짐 출처: https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea3/chapters/4-understanding-widgets 1. createState() - 상태생성 StatefulWidget이 State를 생성하기 위해 무조건 호출해야 하는 함</description></item><item><title>플러터 기본적인 위젯 사용해보기</title><link>https://jaejin0me.github.io/post/posts197/</link><pubDate>Tue, 13 Apr 2021 20:05:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts197/</guid><description>사용하는 위젯 설명 MaterialApp - Material 디자인 제공 Scaffold - 기본적인 Material 디자인 레이아웃 제공 Center - 상하 가운데 정렬 Swich - 토글스위치 제공 Text - 텍스트 Column - chlidren 속성이 있어 여러개의 하위 위</description></item><item><title>Dart 연습</title><link>https://jaejin0me.github.io/post/posts196/</link><pubDate>Tue, 13 Apr 2021 19:05:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts196/</guid><description>구구단 1 2 3 4 5 6 7 void main() { for (int i = 2; i &amp;lt; 10; i++) { for (int j = 1; j &amp;lt; 10; j++) { print(&amp;#39;${i}* ${j}= ${i * j}&amp;#39;); } } } 자동차 클래스 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23</description></item><item><title>Hi 2021</title><link>https://jaejin0me.github.io/post/posts195/</link><pubDate>Mon, 05 Apr 2021 23:05:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts195/</guid><description>진짜 오랜만에 글 쓰네요ㅎㅎ 네이버 블로그 좀 쓰다가, 구글블로거도 쓰다가 이리저리 기웃기웃하다가 다시 hugo로 돌아왔습니다. 포스팅하는게 번거롭긴 하지만</description></item><item><title>파이썬으로 쿠팡 파트너스 API 활용하기 - 3 네이버 블로그 API로 글올리기</title><link>https://jaejin0me.github.io/post/20200202/</link><pubDate>Sun, 02 Feb 2020 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20200202/</guid><description>이력 2020.02.02 포스팅 안녕하세요. 많이 늦었죠? ㅎㅎ, 쓰기가 너무 귀찮아요..ㅋㅋ 사실 요즘에는 쿠팡 상품도 안올리고 있어요. 귀찬쓰.. 아무튼 오늘도 시작하겠습니</description></item><item><title>14회 정보보안기사 합격 후기 및 정보처리기사 합격 후기</title><link>https://jaejin0me.github.io/post/posts194/</link><pubDate>Sun, 12 Jan 2020 00:14:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts194/</guid><description>미뤄왔던 정보보안기사, 정보처리기사 자격증을 땄습니다. 두 자격증모두 따야지, 따야지 생각만 하다가 드디어 땄네요. 정보처리기사는 되게 쉬웠어요. IT쪽에</description></item><item><title>파이썬으로 쿠팡 파트너스 API 활용하기 - 2 상품 이미지 가져오기</title><link>https://jaejin0me.github.io/post/20200101/</link><pubDate>Wed, 01 Jan 2020 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20200101/</guid><description>안녕하세요. 저번 시간에 파트너스 API를 통해서 상품정보를 가져오는 것까지 했습니다. 오늘은 쿠팡에 있는 상품 이미지 가져오는 방법에 대해서 설명하겠습니다.</description></item><item><title>파이썬으로 쿠팡 파트너스 API 활용하기 - 1</title><link>https://jaejin0me.github.io/post/20191230/</link><pubDate>Mon, 30 Dec 2019 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20191230/</guid><description>이력 2019.12.30 포스팅 2020.01.01 수정 - API 호출 횟수 설명 추가 안녕하세요. 쿠팡 파트너스 활동을 시작하면서 파이썬으로 쿠팡 파트너스 API, 네이버 블로그 API를 활용하여 포스팅을 자</description></item><item><title>요즘 근황~</title><link>https://jaejin0me.github.io/post/posts193/</link><pubDate>Sat, 12 Oct 2019 05:17:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts193/</guid><description>마지막 포스팅이 7월이던데 10월이 되서야 글하나 쓰네요 하반기에 정보처리기사, 정보보안기사를 신청해서 지금 따고있는 중이에요. 모레가 바로 정보처리기사입</description></item><item><title>유폰 영작 피드백 정리</title><link>https://jaejin0me.github.io/post/posts192/</link><pubDate>Sat, 20 Jul 2019 19:29:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts192/</guid><description>문장을 becuase 로 시작하지 말것, 이유를 이어서 쓰는 용도임 정식 = table d&amp;rsquo;hote menu 나의 이웃을 반갑게 인사하는 것을 좋아한다 My neighbors like a kind of greeting. 10미만은 스펠링으로 적고 이상부터</description></item><item><title>개발관련 유튜브 동영상 추천</title><link>https://jaejin0me.github.io/post/posts191/</link><pubDate>Sun, 30 Jun 2019 23:49:26 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts191/</guid><description>테크닉에 대한 영상은 아니고요..ㅎㅎ 저는 그런거에 대해서는 현재 크게 관심이 없습니다 ㅎ 프로그래머의 수치: 복구 불가능한 버그 좋은 프로그래밍 원리 3가지란?</description></item><item><title>이번주는 정말 바빴네요</title><link>https://jaejin0me.github.io/post/posts190/</link><pubDate>Sun, 30 Jun 2019 23:44:15 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts190/</guid><description>릴리즈 패치 여러번 했네요..ㅎㅎ 바빴지만 그만큼 성과를 많이 냈으니 헛고생 한거는 아니라 다행이네요. 내일부터 다시 월요일인데, 이제 평상시로 돌아와 차분하게</description></item><item><title>셀프 코드리뷰 - 06월 22일</title><link>https://jaejin0me.github.io/post/posts189/</link><pubDate>Fri, 21 Jun 2019 20:17:51 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts189/</guid><description>1. 생성자 안에서 처리 할껄! 생성자안에서 처리했으면 다 커버하는건데, 파라미터로 받게 처리해서 클래스만들때마다 옵션읽어야 하는 나쁜 코드! 2. grep 안해본것 grep 해</description></item><item><title>셀프 코드리뷰 - 06월 21일</title><link>https://jaejin0me.github.io/post/posts188/</link><pubDate>Fri, 21 Jun 2019 00:34:51 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts188/</guid><description>요즘에 코드를 보며 왜? 를 생각하고 이유를 알아가는 재미가 붙었습니다. 주기적으로 팀내 코드리뷰를 받기는 하지만, 스스로 고찰해보고자 생각 나는게 있을때 간단하</description></item><item><title>ftss patch for apache 2.4</title><link>https://jaejin0me.github.io/post/posts187/</link><pubDate>Thu, 06 Jun 2019 15:39:15 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts187/</guid><description>ftss 라는 아파치 웹 서버를 모니터링하는 명령어를 사용하고 있습니다. mod_status 같은 모듈과는 다르게 웹서버 접속없이 쉘에서 바로 확인할 수 있어서 웹서버 부하시에 활용되는데</description></item><item><title>벌써 6월이네요</title><link>https://jaejin0me.github.io/post/posts186/</link><pubDate>Wed, 05 Jun 2019 01:21:24 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts186/</guid><description>날씨도 많이 더워지고, 시간이 정말 빠르네요. 6월달의 목표는 드론 오프소스인 px4에서 이슈를 하나해서 PR요청하는 것 정보처리기사 준비, 간단하게 준비해도</description></item><item><title>유폰 요약 - 2</title><link>https://jaejin0me.github.io/post/posts185/</link><pubDate>Fri, 31 May 2019 22:14:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts185/</guid><description>어제 절반만 복습해서 나머지 오늘 복습합니다. 그의 누나는 도시 반대편에 산다 His older sister lives on the other side of the city. 1년에 4번 정도 만난다. We usually see each other four times in a year. 그녀를 한번</description></item><item><title>유폰 요약 - 1</title><link>https://jaejin0me.github.io/post/posts184/</link><pubDate>Thu, 30 May 2019 22:57:22 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts184/</guid><description>오픽따려고 유폰을 약 한달전부터 시작했습니다. 어제까지 10회를 마무리했는데 오늘 테스트가 있어서 그 동안의 내용 좀 복습합니다. Level 5 ~ 6 열번하고 정리한 거 바</description></item><item><title>으아 피곤해</title><link>https://jaejin0me.github.io/post/posts183/</link><pubDate>Wed, 29 May 2019 04:11:17 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts183/</guid><description>오늘안에 sql 튜닝 포스팅 모두 끝내고 싶어서 버티면서 작업하다 보니 벌써 4시가 넘었네요.. ㅋㅋ 내일 출근인데 후 얼른 자야지 굿밤~</description></item><item><title>책뿌숴짐 - SQL 레벨업 9</title><link>https://jaejin0me.github.io/post/posts182/</link><pubDate>Wed, 29 May 2019 01:39:17 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts182/</guid><description>9장. 갱신과 데이터 모델 - 망치와 못 26강. 갱신을 효율적으로 갱신을 효율적으로 수행하는 SQL을 케이스 스터디 1. NULL 채우기 1 2 3 4 5 6 7 8 9 UPDATEOmitTblSETval=(SELECTvalFROMOmitTblOT1WHEREOT1.keycol=(SELECTMAX(seq)FROMOmitTblOT2WHEREOT2.keycol=OmitTbl.keycolANDOT2.seq&amp;lt;OmitTbl.seqANDOT2.valISNOTNULL))WHEREvalISNULL; 2. 반대로 N</description></item><item><title>책뿌수기 - SQL 레벨업 8</title><link>https://jaejin0me.github.io/post/posts181/</link><pubDate>Tue, 28 May 2019 23:49:45 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts181/</guid><description>8장. SQL의 순서 - 깨어나는 절차 지향 sql은 관계 모델의 이론에 기초하고 있기 때문에 순번을 다루기 위한 기능이 없다. 하지만 레코드에 순번을 붙여 처리하는 경</description></item><item><title>블로그 리뉴얼 사항</title><link>https://jaejin0me.github.io/post/posts180/</link><pubDate>Tue, 28 May 2019 21:59:55 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts180/</guid><description>겉으로 보기에 바뀐것은 없어 보이지만 내부적으로 몇가지를 수정했습니다. 1. 빌드 및 deploy 자동화 현재까지 블로그에 새로운 글을 올리기 위한 과정을 다음과 같았습니다.</description></item><item><title>Travis CI 테스트</title><link>https://jaejin0me.github.io/post/posts173/</link><pubDate>Mon, 27 May 2019 17:26:41 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts173/</guid><description>자동으로 빌드되어 올라가는지 테스트</description></item><item><title>오랜만의 근황~ 19년 3월</title><link>https://jaejin0me.github.io/post/posts82/</link><pubDate>Tue, 05 Mar 2019 00:32:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts82/</guid><description>오랜만의 근황이네요. 요즘에 회사에 일도 많고, 고민도 많아요. 선택이란게 참 쉬운게 아닌거 같아요. 머리아프지만 잘 해결해 나가려고 노력중이에요. 업무외에도</description></item><item><title>책뿌수기 - SQL 레벨업 7</title><link>https://jaejin0me.github.io/post/posts109/</link><pubDate>Thu, 07 Feb 2019 22:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts109/</guid><description>최근 sql 튜닝에 대해서 책도 보고 유투브에서 동영상도 몇편 봤었는데 그 중에서 저에게 가장 큰 통찰?을 줬던 영상이 있어서 링크 올립니다 [SQL Unplugged 2013] 쉽고 재미있는 인덱스 이야</description></item><item><title>책뿌수기 - SQL 레벨업 6</title><link>https://jaejin0me.github.io/post/posts107/</link><pubDate>Thu, 31 Jan 2019 22:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts107/</guid><description>6. 결합(결합을 지배하는 자가 SQL을 지배한다) ch 18. 기능적인 관점으로 구분하는 결합의 종류 크로스 결합 내부 결합 외부 결합 자기 결합 등가 결합/비등가 결합 자연</description></item><item><title>책뿌수기 - SQL 레벨업 7</title><link>https://jaejin0me.github.io/post/posts108/</link><pubDate>Thu, 31 Jan 2019 22:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts108/</guid><description>7. 서브쿼리(곤란한 부분은 분할해야만 할까?) ch 21. 서브쿼리가 일으키는 폐해 1) 서브쿼리의 문제점 성능적 문제는 서브쿼리가 실체적인 데이터를 저장하고 있지 않다</description></item><item><title>책뿌수기 - SQL 레벨업 5</title><link>https://jaejin0me.github.io/post/posts106/</link><pubDate>Wed, 30 Jan 2019 22:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts106/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 5. 반복된(절차 지향형의 속박) ch 14. 반복문 의존증 RDB는 관계 전체를 조작의 대상으로 삼기 때문에 설계상에서</description></item><item><title>책뿌수기 - SQL 레벨업 4</title><link>https://jaejin0me.github.io/post/posts105/</link><pubDate>Tue, 29 Jan 2019 22:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts105/</guid><description>4. 집약과 자르기 ch 12. 집약 COUNT, SUM, AVG, MAX, MIN(Aggregate function) 1) 여러 개의 리코드를 한 개의 레코드로 집합 필드 수가 다르면 UNION 적용이 불가능하다. 또한 UNION으로 여러개의 쿼리를 머지</description></item><item><title>책뿌수기 - SQL 레벨업 3</title><link>https://jaejin0me.github.io/post/posts104/</link><pubDate>Sun, 20 Jan 2019 22:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts104/</guid><description>3. SQL의 조건 분기 ch 8. UNION을 사용한 쓸데없이 긴 표현 UNION을 사용한 조건 분기는 좋지 않다. UNION은 내부적으로 여러개의 SELECT 구문을 실행하는 실</description></item><item><title>책뿌수기 - SQL 레벨업-2</title><link>https://jaejin0me.github.io/post/posts103/</link><pubDate>Sun, 20 Jan 2019 22:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts103/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 1. SQL 기초 ch 6. SELECT 구문 1) SELECT 구와 FROM 구 SELECT 1 처럼 상수를 선택하는 경우 FROM이 필요없다. )2) WHERE 구 WHERE 구의 조건이 많</description></item><item><title>책뿌수기 - 현대 네트워크 기초 이론 1-2</title><link>https://jaejin0me.github.io/post/posts132/</link><pubDate>Mon, 31 Dec 2018 00:50:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts132/</guid><description>공부목적으로 정리합니다. 내용이 많아서 남은 부분은 다음 포스팅에.. * 1.8 네트워크 융합 전화와 정보 기술의 통합을 의미 애플리케이션 융합 기업의 최종 사용자 관점</description></item><item><title>책뿌수기 - SQL 레벨업-1</title><link>https://jaejin0me.github.io/post/posts102/</link><pubDate>Sun, 30 Dec 2018 22:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts102/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 1. DBMS 아키텍처 ch 1.DBMS 아키텍처 개요 1) 쿼리 평가 엔진 SQL 구문을 분석하고, 어떤 순서로 기억장치의 데이터에 접근할지</description></item><item><title>책뿌수기 - 현대 네트워크 기초 이론 1-1</title><link>https://jaejin0me.github.io/post/posts131/</link><pubDate>Wed, 26 Dec 2018 00:05:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts131/</guid><description>공부목적으로 정리합니다. 내용이 많아서 남은 부분은 다음 포스팅에.. * Ch1. 현대 네트워킹의 요소 1.1 네트워크 생태계 궁극적으로 사용자는 애플리케이션과 콘텐츠에</description></item><item><title>도커란???</title><link>https://jaejin0me.github.io/post/posts110/</link><pubDate>Sun, 09 Dec 2018 00:15:15 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts110/</guid><description>초보를 위한 도커 안내서 - 도커란 무엇인가? 를 보고 간추린 내용 입니다. 도커 : 컨테이너 기반의 오픈소스 가상화 플랫폼 컨테이너 : 격리된 공간에서 프로세스가 동작</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 11</title><link>https://jaejin0me.github.io/post/posts101/</link><pubDate>Thu, 06 Dec 2018 00:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts101/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 11. ER모델 Section 1. ER모델의 개념 개념적 데이터 모델의 대표적인 것 개체 집합, 속성 집합, 개체 집합 간의 관계 집</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 14</title><link>https://jaejin0me.github.io/post/posts100/</link><pubDate>Wed, 05 Dec 2018 01:11:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts100/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 14. 트랜잭션 Section 1. 트랜잭션의 개념 트랜잭션(transaction) : 데이터베이스 내에서 하나의 논리적</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 12</title><link>https://jaejin0me.github.io/post/posts99/</link><pubDate>Tue, 04 Dec 2018 01:26:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts99/</guid><description>Ch 12. 정규화 Section 1. 이상 현상 anomaly : 불필요한 NULL이 삽입되거나, 연쇄 삭제, 데이터 일관성이 깨지는 현상 1.1 삽입 현상(insertion anomaly) 데이터 삽입 시 특정 열</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 8</title><link>https://jaejin0me.github.io/post/posts98/</link><pubDate>Tue, 04 Dec 2018 00:48:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts98/</guid><description>Ch 8. 데이터 검색 Section 1. 기본적인 SELECT 명령문 SELECT [DISTINCT] 열_이름 ~ FROM 테이블_이름 [WHERE 조건 [중첩질의]] [GROUP BY 열_이름] [HAVING 조건] [ORDER BY 열_이름 ~ [ASC|DESC]]; HAVING 절은 GROUP BY 절의 결과로</description></item><item><title>12월 초 근황</title><link>https://jaejin0me.github.io/post/posts81/</link><pubDate>Tue, 04 Dec 2018 00:32:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts81/</guid><description>으아~ 벌써 12월이라니, 시간 정말 빠르네요 새 직장에 오면서 고민도 하고 적응도 하느라 벌써 시간이 이렇게나 흘렀네요 저번주 주말에는 고향집에 내려갔다 왔어요.</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 7</title><link>https://jaejin0me.github.io/post/posts97/</link><pubDate>Thu, 29 Nov 2018 00:30:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts97/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 7. 데이터 관리 Section 1. 데이터 입력 INSERT INTO 테이블_이름 [열_이름 ~] VALUES (값 ~); 1.1 테이블에 데잍를 직접입력하는 방법</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 6</title><link>https://jaejin0me.github.io/post/posts96/</link><pubDate>Thu, 29 Nov 2018 00:27:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts96/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 6. 테이블 관리 Section 1. 테이블 생성 1.1 데이터 형식을 사용한 테이블 정의 CREATE TABLE 테이블이름 ( 열_이름 데이터 형식 [NOT NULL,</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 5</title><link>https://jaejin0me.github.io/post/posts95/</link><pubDate>Thu, 29 Nov 2018 00:17:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts95/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 5. SQL Server 설치 및 예제 데이터 베이스 구축 Section 2. 예제 데이터베이스 구축 데이터베이스는 시스템 DB와 사용자 DB로</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 4</title><link>https://jaejin0me.github.io/post/posts94/</link><pubDate>Wed, 28 Nov 2018 01:15:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts94/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 4. 관계 대수 Section 1. 관계 대수 관계 대수는 릴레이션을 처리하는 연산의 집합 관계 대수의 피연산자는 릴레이션 연산 결</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 3</title><link>https://jaejin0me.github.io/post/posts93/</link><pubDate>Wed, 28 Nov 2018 00:50:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts93/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 3. 관계 데이터 모델과 제약조건 Section 1. 관계 데이터 모델 관계 데이터 모델(relation data model) 집합론과 논리 분</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 2</title><link>https://jaejin0me.github.io/post/posts92/</link><pubDate>Tue, 27 Nov 2018 01:30:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts92/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 2. 데이터 모델 Section 1. 데이터 모델 1.1 데이터 모델의 개념 데이터베이스의 구조를 단순화, 추상화하여 체계적으로 표</description></item><item><title>백준알고리즘 1110번 - 더하기 사이클</title><link>https://jaejin0me.github.io/post/posts66/</link><pubDate>Mon, 26 Nov 2018 00:33:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts66/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include &amp;lt;iostream&amp;gt; #pragma warning(disable:4996) using namespace std; int main(void) { int num, tmp, cnt = 0; cin.tie(NULL); ios_base::sync_with_stdio(false); #ifndef ONLINE_JUDGE freopen(&amp;#34;input.txt&amp;#34;, &amp;#34;r&amp;#34;, stdin); freopen(&amp;#34;output.txt&amp;#34;, &amp;#34;w&amp;#34;, stdout); #endif cin &amp;gt;&amp;gt; num; tmp = num; do { tmp =</description></item><item><title>백준알고리즘 4344번 - 평균은 넘겠지</title><link>https://jaejin0me.github.io/post/posts65/</link><pubDate>Mon, 26 Nov 2018 00:30:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts65/</guid><description>제목 재밌네 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 #include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;iomanip&amp;gt; #pragma warning(disable:4996) using namespace std; int</description></item><item><title>백준알고리즘 1546번 - 평균</title><link>https://jaejin0me.github.io/post/posts64/</link><pubDate>Mon, 26 Nov 2018 00:23:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts64/</guid><description>요즘 다시 시작한 알고리즘 공부.. 쉬운거 부터 풀어 봅시다 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #include &amp;lt;iostream&amp;gt;</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 1</title><link>https://jaejin0me.github.io/post/posts91/</link><pubDate>Mon, 26 Nov 2018 00:07:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts91/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 1. DB 시스템 Section 1. DB 1.1 데이터와 데이터 베이스 개념 DB = 필요한 데이터를 모아 놓은 것 1.2 데이터와 정보 데이터 : 관</description></item><item><title>인터럽트와 예외 - 2</title><link>https://jaejin0me.github.io/post/posts127/</link><pubDate>Mon, 11 Jun 2018 22:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts127/</guid><description>향상된 프로그램 가능한 인터럽트 컨트롤러 CPU가 하나라면 마스터 PIC의 출력선을 곧바로 CPU의 INTR핀으로 연결하면 된다. 그렇지만 2개 이상이 된다면</description></item><item><title>인터럽트와 예외 - 1</title><link>https://jaejin0me.github.io/post/posts126/</link><pubDate>Mon, 11 Jun 2018 21:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts126/</guid><description>개요 인터럽트는 프로세서가 실행하는 명령어의 순서를 바꾸는 사건으로 정의한다. 이런 사건은 CPU의 내·외부에서 하드웨어적인 회로가 발생하는 전기적인 신호에</description></item><item><title>악성코드 샘플 다운로드</title><link>https://jaejin0me.github.io/post/posts77/</link><pubDate>Mon, 26 Mar 2018 12:47:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts77/</guid><description>http://malc0de.com/database/ 샘플 다운하기 가장 편함 https://www.malwares.com/ 다운은 안되지만 검색하기 용이</description></item><item><title>근황</title><link>https://jaejin0me.github.io/post/posts80/</link><pubDate>Tue, 20 Mar 2018 16:42:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts80/</guid><description>원룸에 책걸상이 생겼습니다~ 짝짝짝 이제 집에서도 작업좀 할 수 있겠네요 근데 지금 쓰고있는 노트북이 이제좀 느려져서 좋은 걸로 하나 사야될것 같습니다. ryzen mobi</description></item><item><title>pwnable - cmd1</title><link>https://jaejin0me.github.io/post/posts179/</link><pubDate>Tue, 06 Mar 2018 22:10:59 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts179/</guid><description>리눅스 환경변수를 이해하고 수정할 수 있어야 합니다 1 ./cmd1 &amp;#34;export PATH=/bin;cat *&amp;#34;</description></item><item><title>해커스쿨 - level4</title><link>https://jaejin0me.github.io/post/posts178/</link><pubDate>Mon, 05 Mar 2018 22:10:59 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts178/</guid><description>리눅스의 서비스(데몬)에 대한 이해가 필요합니다. 명령어를 실핼할 수 있는 코딩 실력이 필요합니다. 1 finger @localhost</description></item><item><title>해커스쿨 - level3</title><link>https://jaejin0me.github.io/post/posts177/</link><pubDate>Mon, 05 Mar 2018 21:56:59 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts177/</guid><description>쌍따옴표를 이용해 하나의 인자로 전달하고, 세미콜론을 통해 여러개의 명령어를 줄 수 있습니다. 1 /bin/autodig &amp;#34;;my-pass;&amp;#34;</description></item><item><title>해커스쿨 - level2</title><link>https://jaejin0me.github.io/post/posts176/</link><pubDate>Mon, 05 Mar 2018 21:21:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts176/</guid><description>vi에서 명령어 실행 방법을 알아야 합니다. 1 2 3 find / -perm +6000 -user level3 2&amp;gt;/dev/null /usr/bin/editor :! my-pass</description></item><item><title>해커스쿨 - level1</title><link>https://jaejin0me.github.io/post/posts175/</link><pubDate>Sat, 03 Mar 2018 02:00:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts175/</guid><description>find 명령어와 퍼미션에 대한 이해가 필요합니다 1 find / -perm +6000 -user level2 2&amp;gt;/dev/null</description></item><item><title>pwnable - fd</title><link>https://jaejin0me.github.io/post/posts174/</link><pubDate>Fri, 02 Mar 2018 21:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts174/</guid><description>표준 입출력 파일 디스크립터에 대한 이해가 필요합니다 1 ./fd 4660</description></item><item><title>낭만의 역할 - 이제야</title><link>https://jaejin0me.github.io/post/posts165/</link><pubDate>Thu, 22 Feb 2018 02:43:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts165/</guid><description>눈에는 하얀 구름을 붙이자서서히 모든 어둠이 낮이 될 수 있어시들함과 보들보들함이 만나 상쾌해지는 물감 같은구름을 노란 손으로 꽉 쥐면 달이 된다는 믿음으로너의 낭만</description></item><item><title>겨울 골짜기에서 - 도종환</title><link>https://jaejin0me.github.io/post/posts164/</link><pubDate>Thu, 22 Feb 2018 02:38:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts164/</guid><description>낮은 가지 끝에 내려도 아름답고험한 산에 내려도 아름다운 새벽 눈처럼 내 사랑도 당신 위에 그렇게 내리고 있습니다 밤을 새워 당신의 문을 두드리며 내린 뒤 여기서 거기까지</description></item><item><title>너무 어렵게 살지 말자 - 강재현</title><link>https://jaejin0me.github.io/post/posts163/</link><pubDate>Thu, 22 Feb 2018 02:32:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts163/</guid><description>너무 어렵게 이야기하며 살지 말자사랑하면 사랑한다고 보고 싶으면 보고 싶다고있는 그대로만 이야기하고 살자 너무 어렵게 셈하며 살지 말자하나를 주었을 때 몇 개가 돌아</description></item><item><title>별은 너에게로 - 박노해</title><link>https://jaejin0me.github.io/post/posts162/</link><pubDate>Thu, 22 Feb 2018 02:29:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts162/</guid><description>어두운 길을 걷다가빛나는 별 하나 없다고절망하지 말아라 가장 빛나는 별은 아직도달하지 않았다 구름 때문이 아니다불운 때문이 아니다 지금까지 네가 본 별들은수억 광년</description></item><item><title>당신이 새겨들어야 할 이야기</title><link>https://jaejin0me.github.io/post/posts161/</link><pubDate>Thu, 22 Feb 2018 02:23:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts161/</guid><description>자기 자신을 비관하지 말 것자기 자신을 낮추지 말고 자신을 사랑할 것다른 사람이랑 비교하지 말 것자기 자신에게 항상 되물을 것 최선을 다해서 공부할 것긍정적으로 생각할</description></item><item><title>동행 - 이수동</title><link>https://jaejin0me.github.io/post/posts160/</link><pubDate>Thu, 22 Feb 2018 02:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts160/</guid><description>꽃 같은 그대나무 같은 나를 믿고 길을 나서자 그대는 꽃이라 10년이면 10번 변하겠지만나는 나무 같아서 그 10년, 내 속에 둥근 나이테로만남기고 말겠다 타는 가슴이</description></item><item><title>생각이 나서 - 황경신</title><link>https://jaejin0me.github.io/post/posts159/</link><pubDate>Thu, 22 Feb 2018 02:18:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts159/</guid><description>온몸을 다해 사랑했으니,이제 온 힘을 다해 이별하자마음을 다해 슬퍼하고, 마음을 다해 후회하고,마음을 다해 지나간 날들을 보내주자모래알처럼 손가락 사이로 빠져</description></item><item><title>별 - 정진규</title><link>https://jaejin0me.github.io/post/posts158/</link><pubDate>Thu, 22 Feb 2018 02:02:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts158/</guid><description>별들이 바탕은 어둠이 마땅하다대낮에는 보이지 않는다지금 대낮인 사람들은별들이 보이지 않는다지금 어둠이 사람들에게만별들이 보인다지금 어둠이 사람들만별들을</description></item><item><title>꽃 한 송이 - 안미향</title><link>https://jaejin0me.github.io/post/posts157/</link><pubDate>Thu, 22 Feb 2018 02:00:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts157/</guid><description>실패후회외로움 그 속에 힘내괜찮아사랑해 말 한마디 이건 만발한 꽃밭보다한 송이의 꽃이 더 사랑스러운 이유</description></item><item><title>눈부신 세상 - 나태주</title><link>https://jaejin0me.github.io/post/posts156/</link><pubDate>Thu, 22 Feb 2018 01:59:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts156/</guid><description>멀리서 보면 때로 세상은조그맣고 사랑스럽다따듯하기까지 하다 나는 손을 들어세상의 머리를 쓰다듬어 준다 자다가 깨어난 아이처럼세상은 배시시 눈을 뜨고나를 향해 웃</description></item><item><title>연애편지를 쓰는 밤 - 정해좀</title><link>https://jaejin0me.github.io/post/posts155/</link><pubDate>Thu, 22 Feb 2018 01:55:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts155/</guid><description>당신이 마련하신기쁨과 고통의 행사에초대해 주셔서 고맙습니다 이미 몇 명이 다녀가셨다지요꽃을 준비하지 못하건시들지 않는 기쁨을선사하고 싶어서였습니다 그러나</description></item><item><title>나를 잡아, 나를 놔 - 신현림</title><link>https://jaejin0me.github.io/post/posts154/</link><pubDate>Thu, 22 Feb 2018 01:51:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts154/</guid><description>사는 게 별거겠니추억하며 잊어 가는 일죽고 싶다가 살고 싶은 일감정의 시소 타며 하늘 보는 일사는 데 가장 큰 고통은 욕망이야 나를 안아 줘안전벨트처럼 안아 줘불안한 술잔</description></item><item><title>진심으로 사랑하게 해주십시오 - 이해인</title><link>https://jaejin0me.github.io/post/posts153/</link><pubDate>Mon, 19 Feb 2018 13:10:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts153/</guid><description>진심으로 사랑하게 해주십시오 저 자신을 진심으로 사랑하게 해주십시오바쁘다는 것을 핑계로 내면을깊이 들여다보지 않아스스로를 외롭게 만들고 사소한 일로도쉽게 의</description></item><item><title>기다림 - 성백원</title><link>https://jaejin0me.github.io/post/posts152/</link><pubDate>Mon, 19 Feb 2018 13:08:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts152/</guid><description>매일 만나는 사이보다가끔씩 만나는 사람이 좋다 기다린다는 것이때로 가슴을 무너트리는 절망이지만돌아올 사람이라면잠깐씩 사라지는 일도 아름다우리라 너무 자주 만</description></item><item><title>첫눈에 - 박해석</title><link>https://jaejin0me.github.io/post/posts151/</link><pubDate>Mon, 19 Feb 2018 13:07:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts151/</guid><description>첫눈에 혹해서첫눈에 홀딱 반하여첫눈에 몸과 맘 다 빼앗겨첫눈에 넋을 잃으니 첫눈에 슬픔뿐이다.</description></item><item><title>사랑을 훔치는 이 - 윌리엄 셰익스피어</title><link>https://jaejin0me.github.io/post/posts150/</link><pubDate>Mon, 19 Feb 2018 13:02:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts150/</guid><description>나의 모든 사랑을 가져가십시오사랑하는 이여 그 모두를 그렇지만 그대가 이전까지 가지고 있던 것 외에무엇을 더 얻을 수 있을까요? 참된 사랑이라고 부를 수 있는 것은하나</description></item><item><title>그래도 당신을 - 카렌 라이블링</title><link>https://jaejin0me.github.io/post/posts149/</link><pubDate>Mon, 19 Feb 2018 12:54:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts149/</guid><description>나는 모험을 하고 있어요당신을 사랑하려는 나는 그걸 알아요 그래서 겁도 나구요그래도 그만두지는 않겠어요 당신에게서그토록 많은 것들을 알았기 때문이죠그래서 당신</description></item><item><title>껌뻑이다가 - 최정례</title><link>https://jaejin0me.github.io/post/posts148/</link><pubDate>Mon, 19 Feb 2018 12:49:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts148/</guid><description>느닷없이 너 마주친다 해도그게 무엇인지 알아채지 못할 것 같다물건을 고르고지갑 열고 계산을 치르고잊은 게 없나 주머니 뒤적거리다그곳을 떠나듯 가끔손댈 수 없이욱신</description></item><item><title>단추 - 문숙</title><link>https://jaejin0me.github.io/post/posts147/</link><pubDate>Mon, 19 Feb 2018 12:43:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts147/</guid><description>장롱 밑에 떨어진 단추어둠에 갇혀먼지더미에 푹 파묻혀 있다어느 가슴팍에서 떨어져 나온 것일까 한 사람을 만나뿌리 깊게 매달렸던 시절을 생각한다따스하게 앞섶을 여며</description></item><item><title>버려진 종이컵 - 문숙</title><link>https://jaejin0me.github.io/post/posts146/</link><pubDate>Mon, 19 Feb 2018 12:39:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts146/</guid><description>빈 베치에 앉아있다.누가 저것의 속을 비우고입술 자국만 찍고 가버린 걸까구겨 넣은 꽁초 하나얼룩진 몸안에 버려져 있다 무너져버린 한 그림자를 품고한동안 어두웠을 저</description></item><item><title>목숨 - 조정권</title><link>https://jaejin0me.github.io/post/posts145/</link><pubDate>Mon, 19 Feb 2018 12:36:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts145/</guid><description>마음의 어디를 동여맨 채 살아가는 이를사랑한 것이 무섭다고 너는 말했다 두 팔을 아래로 내린 채 눈을 감고오늘 죽은 이는 내일 더 죽어있고모레엔 더욱 죽어 있을 거라고 너는</description></item><item><title>다시 찾아주시기를 - 김남복</title><link>https://jaejin0me.github.io/post/posts144/</link><pubDate>Mon, 19 Feb 2018 12:29:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts144/</guid><description>좋은 언변으로도달콤한 사탕발림으로도당신을 넘하지는 않으려오 감싸고도는 안개의 정감으로도따듯한 커피 한잔으로도당신에게 걸리적거리지는 않으려오 다가서지</description></item><item><title>아픈 사랑일수록 그 향기를 짙다 - 도종환</title><link>https://jaejin0me.github.io/post/posts143/</link><pubDate>Mon, 19 Feb 2018 12:23:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts143/</guid><description>아픈 사랑일수록 그 향기는 짙다. 사랑하는 사람의 마음은,들판일수록 좋다.아무것도 없는벽지 한 장일수록 좋다. 누군가가 와서마음껏 그림을 그릴 수 있는단 한 가지</description></item><item><title>경계 - 박노해</title><link>https://jaejin0me.github.io/post/posts142/</link><pubDate>Mon, 19 Feb 2018 12:17:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts142/</guid><description>경계 - 박노해 과거를 팔아 오늘을 살지 말 것현실이 미래를 잡아먹지 말 것미래를 말하며 과거를 묻어버리거나미래를 내세워 오늘 할 일을 흐리지 말 것 순간의 감정 낭비를 하</description></item><item><title>백준알고리즘 5651번 - 완전 중요한 간선</title><link>https://jaejin0me.github.io/post/posts63/</link><pubDate>Sun, 11 Feb 2018 12:20:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts63/</guid><description>중요한 간선을 찾는 코드에서 prev2[next2.to] 가 되어있어야 하는데 prev2[curr2]로 되어 있는 것을 발견하지 못해 푸는데 오래 걸린 문제이다. 중요한 간선의 여부는 최대</description></item><item><title>오라클 DB 문제 풀이(2)</title><link>https://jaejin0me.github.io/post/posts90/</link><pubDate>Sun, 11 Feb 2018 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts90/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>오라클 DB 문제 풀이</title><link>https://jaejin0me.github.io/post/posts89/</link><pubDate>Wed, 07 Feb 2018 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts89/</guid><description>오라클 DB의 문제이만 Mysql 계열의 MariaDB로 풀었습니다. 제가 구한 샘플데이터에 맞게 문제의 수치도 조금 바꿨습니다. 풀면서 느낀 SQL의 가장 큰 차이는 M</description></item><item><title>Join</title><link>https://jaejin0me.github.io/post/posts88/</link><pubDate>Mon, 05 Feb 2018 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts88/</guid><description>1. Join Join을 통해서 2개 이상의 테이블을 연결할 수 있다. Join은 기본적으로 기본키나 외부키의 값의 연관에 의해 성립되지만, 논리적인 값들의 연관만으로도</description></item><item><title>백준알고리즘 11495번 - 격자 0 만들기</title><link>https://jaejin0me.github.io/post/posts62/</link><pubDate>Sun, 04 Feb 2018 12:20:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts62/</guid><description>시간초과가 계속해서 나는 것은 최적화 하면서 근근이 풀긴했는데, 속도가 많이 느리다. 자바로 풀 사람들 중에서 꼴등임 ㅎ 다른 정답자들의 풀이를 보니, 나는 에드몬드</description></item><item><title>백준알고리즘 2316번 - 도시 왕복하기</title><link>https://jaejin0me.github.io/post/posts61/</link><pubDate>Tue, 30 Jan 2018 12:20:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts61/</guid><description>어제 못 풀고 오늘에서야 푼 문제 정점을 1번만 지나는 조건을 만족하기 위해 정점을 분할하고 분할된 정점사이에 용량의 1의 간선을 추가해야 한다. 주의해야 할 것은 입력</description></item><item><title>2017 암호경진대회 2번</title><link>https://jaejin0me.github.io/post/posts76/</link><pubDate>Mon, 29 Jan 2018 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts76/</guid><description>원본과 동일한 서명값을 만들어 내는 메시지를 구하는 문제입니다. 48bit의 해쉬함수가 사용되는데 함수를 분석해보면 16bit의 값만을 갖는 걸을 알 수 있습니</description></item><item><title>백준알고리즘 2188번 - 축사배정</title><link>https://jaejin0me.github.io/post/posts60/</link><pubDate>Sun, 28 Jan 2018 12:20:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts60/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>백준알고리즘 1929번 - 소수 구하기</title><link>https://jaejin0me.github.io/post/posts57/</link><pubDate>Fri, 26 Jan 2018 12:20:42 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts57/</guid><description>주어진 두 정수 범위내의 소수를 구하는 문제입니다. 에라토스테네스의 체 라는 것을 사용해 구합니다. 개념적으로 주의해야 할 것은 소수 판별하는 것과 다릅니다. 에라</description></item><item><title>백준알고리즘 1978번 - 소수 찾기</title><link>https://jaejin0me.github.io/post/posts56/</link><pubDate>Fri, 26 Jan 2018 12:20:42 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts56/</guid><description>주어지는 수들 중에서 소수의 개수를 출력하는 문제입니다. 소수를 판별하는 가장 기초적인 방법인 2~n-1 까지 나눠지는지 확인해서 판별하면 됩니다. 또한 $$\sqrt{n}$$ 까지 나눠지는</description></item><item><title>백준알고리즘 2609번 - 최대공약수와 최소공배수</title><link>https://jaejin0me.github.io/post/posts58/</link><pubDate>Fri, 26 Jan 2018 12:20:42 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts58/</guid><description>두 자연수의 최대 공약수와, 최소 공배수를 출력하는 문제입니다. 유클리드 호제법을 이용해 최대공약수를 구하고 최대공야수를 이용해 최소 공배수를 구하면 됩니다.</description></item><item><title>백준알고리즘 2747번 - 피보나치 수</title><link>https://jaejin0me.github.io/post/posts54/</link><pubDate>Fri, 26 Jan 2018 12:20:42 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts54/</guid><description>피보나치 수를 구하는 가장 기초적인 알고리즘입니다. $$ F_n = F_{n-1} + F_{n-2} (n&amp;gt;=2) $$ 점화식을 그대로 구현하여 재귀적으로 풀어내면 됩니다. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</description></item><item><title>백준알고리즘 2748번 - 피보나치 수 2</title><link>https://jaejin0me.github.io/post/posts55/</link><pubDate>Fri, 26 Jan 2018 12:20:42 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts55/</guid><description>피보나치 수 두번째 입니다. DP로 푸는 문제입니다. 점화식으로 풀때는 Top-down 방식이지만 DP로 풀때는 Bottom-up 방식입니다. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description></item><item><title>자바에서 입력 빠르게 받기</title><link>https://jaejin0me.github.io/post/posts59/</link><pubDate>Fri, 26 Jan 2018 12:20:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts59/</guid><description>Scanner는 성능이 떨어지기 때문에 입력이 많은 경우 문제가 생깁니다. BufferedReader와 StringTokenizer를 이용해 입력받</description></item><item><title>영상처리 기초 - 2</title><link>https://jaejin0me.github.io/post/posts121/</link><pubDate>Wed, 24 Jan 2018 16:42:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts121/</guid><description>4. 화소값 기본 처리 1) 공간영역의 정의 (1) 공간 영역 화소들의 집단 또는 공간적 배열 (2) 주파수 영역 저주파 또는 고주파 (3) 마스크 기반 처리 마스크의 다른 이름 템플릿, 윈도</description></item><item><title>영상처리 기초 - 1</title><link>https://jaejin0me.github.io/post/posts120/</link><pubDate>Tue, 23 Jan 2018 16:42:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts120/</guid><description>1. 영상처리 기본 1) 영상처리의 개념 (1) 영상처리의 예 sharpening Image segmentation Noise filtering special effect(Sepia tone effect (2) 영상처리 기술 Image Transforms Image Transmissions Image Enhancement Image Restoration Image Compression Image Segmentation Representation and Description Recognition and Interpretation 1) 영상처리의 응용 분야 의료 영상</description></item><item><title>백준알고리즘 6086번, 최대 유량</title><link>https://jaejin0me.github.io/post/posts10/</link><pubDate>Thu, 04 Jan 2018 18:00:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts10/</guid><description>드디어 네트워크플로우 처음에 목표한 알고리즘이 MCMF까지였기 때문에, 곧 결과에 쫓기듯 공부할 필요는 없을꺼같다. 배울 알고리즘이 참 많지만 사실 그런알고리</description></item><item><title>디자인 패턴 - 싱글턴 패턴</title><link>https://jaejin0me.github.io/post/posts111/</link><pubDate>Mon, 01 Jan 2018 11:31:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts111/</guid><description>싱글턴 패턴 인스턴스가 하나 만들어지고 어디서든지 인스턴스에 접근하기 위한 패턴 간단히 인스턴스에 접근하기 위한 get메소드, 기본적인 생성자, 인스턴스 멤버</description></item><item><title>프로그래머스 - 사칙연산</title><link>https://jaejin0me.github.io/post/posts53/</link><pubDate>Sun, 31 Dec 2017 16:20:42 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts53/</guid><description>완전 초급용은 아닌 dp 이제 자신감이 좀 붙는고만 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50</description></item><item><title>프로그래머스 - 게임 맵 최단거리</title><link>https://jaejin0me.github.io/post/posts52/</link><pubDate>Wed, 27 Dec 2017 16:42:42 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts52/</guid><description>BFS로 구현했는데, 효율성 테스트에서 자꾸 시간초과가 나서 고민했던 문제 알고보니 중복방문을 방지하기 위한 코드가 없었음.. 방문 확인의 중요성!! 1 2 3 4</description></item><item><title>프로그래머스 - 폰켓몬</title><link>https://jaejin0me.github.io/post/posts51/</link><pubDate>Wed, 27 Dec 2017 16:42:42 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts51/</guid><description>문제를 잘 파악하면 어렵지 않은 문제 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import java.util.HashSet; import java.util.Iterator; public class Solution { public int solution(int[] nums) { HashSet&amp;lt;Integer&amp;gt; abc = new HashSet&amp;lt;Integer&amp;gt;(); for(int i=0;i&amp;lt;nums.length;i++) { abc.add(nums[i]); } if(abc.size()&amp;gt;nums.length/2) return nums.length/2; else return abc.size(); } }</description></item><item><title>다시</title><link>https://jaejin0me.github.io/post/posts79/</link><pubDate>Wed, 27 Dec 2017 16:42:42 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts79/</guid><description>Start</description></item><item><title>ActiveX 란?</title><link>https://jaejin0me.github.io/post/posts70/</link><pubDate>Tue, 26 Dec 2017 02:08:34 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts70/</guid><description>이번 글에서는 InternetExplore에서 ActiveX를 퍼징하기 위한 관점에서 ActiveX에 대해서 살펴보겠습니다. ActiveX 개요마이크로소프트</description></item><item><title>COM 이란?</title><link>https://jaejin0me.github.io/post/posts69/</link><pubDate>Tue, 26 Dec 2017 02:08:34 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts69/</guid><description>앞서 ActiveX는 COM과 OLE를 합친 기술라고 설명했습니다.이번에는 그 중에 하나인 COM에 대해서 알아 보겠습니다. 퍼징을 위해 필요한 정도만 알아볼</description></item><item><title>CLSID를 이용한 COM 메서드 확인</title><link>https://jaejin0me.github.io/post/posts166/</link><pubDate>Mon, 25 Dec 2017 12:47:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts166/</guid><description>HTML에서는 ActiveX(COM)를 부를 때 CLSID를 사용합니다.웹 페이지상에서 소스 보기를 이용해서 CLSID를 볼 수 있기 때문에, 구해진 CL</description></item><item><title>windbg 사용법 정리</title><link>https://jaejin0me.github.io/post/posts170/</link><pubDate>Mon, 25 Dec 2017 12:47:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts170/</guid><description>제가 참고할 용도로 작성하고, 계속 추가해 나갈 예정입니다. 로드되지 않은 심볼에 breakpoint 설정 특정 모듈이 로드되기 전에 모듈 내부에 bp를 걸고싶을때 사용bu xxx!print+0x1f3 // xx</description></item><item><title>악성코드 샘플 다운로드</title><link>https://jaejin0me.github.io/post/posts172/</link><pubDate>Mon, 25 Dec 2017 12:47:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts172/</guid><description>http://malc0de.com/database/ 샘플 다운하기 가장 편함 https://www.malwares.com/ 다운은 안되지만 검색하기 용이</description></item><item><title>파이썬의 subprocess 모듈을 이용해 COM 메소드 확인하기</title><link>https://jaejin0me.github.io/post/posts167/</link><pubDate>Mon, 25 Dec 2017 12:47:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts167/</guid><description>참고 파워쉘을 이용해 COM의 메소드를 확인할 수 있습니다. 파이썬에서 subprocess 모듈을 이용해서 파워쉘을 실행시키고 결과를 얻어오는 코드입니다. 1 2 3 4 5 6 7 8 import</description></item><item><title>한 번씩 헷갈리는 어셈블리어</title><link>https://jaejin0me.github.io/post/posts171/</link><pubDate>Mon, 25 Dec 2017 12:47:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts171/</guid><description>제가 참고할 목적으로, 한번씩 헷갈리는 명령어들 위주로 정리합니다.계속 보완할 예정이에요. mov : 좌변에 우변의 값을 대입lea : 좌변(레지스터만가능)에 우</description></item><item><title>3D 레이저 모듈 도면 및 사진</title><link>https://jaejin0me.github.io/post/posts68/</link><pubDate>Mon, 25 Dec 2017 12:47:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts68/</guid><description>노즐을 대체할 레이저 장착용 모듈 도면과 실물</description></item><item><title>CVE-2017-11882 번역</title><link>https://jaejin0me.github.io/post/posts169/</link><pubDate>Sun, 24 Dec 2017 17:47:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts169/</guid><description>공개된 whitepaper를 번역한 내용입니다. 발번역 죄송. 1.개요 전형적인 연구의 시작은 무엇인가? 어떤 연구들은 일반적인 툴로 취약점을 찾는 것을 시작</description></item><item><title>공유기 분석 현황</title><link>https://jaejin0me.github.io/post/posts115/</link><pubDate>Sun, 24 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts115/</guid><description/></item><item><title>공유기 펌웨어 업그레이드 분석 및 조작</title><link>https://jaejin0me.github.io/post/posts114/</link><pubDate>Sun, 24 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts114/</guid><description>슬라이드를 참고해 주세요 소프트웨어 해킹과 하드웨어 해킹을 이용해 공유기의 펌웨어 업그레이드 과정을 분석한 것입니다. 그리고 조작된 펌웨어를 넣을 수 있는 방법에</description></item><item><title>삼성 스마트싱스 IoT게이트웨이 펌웨어 공유</title><link>https://jaejin0me.github.io/post/posts117/</link><pubDate>Sun, 24 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts117/</guid><description>추출한 삼성 스마트싱스펌웨어를 공유합니다. 하지만 중요한 파일들은 암호화되어있습니다. 3rd part에서 취약점을 찾을 수 있다면 Good. UART로 볼 수 있는 부팅메</description></item><item><title>삼성 스마트싱스, 샤오미 , 필립스 휴 하드웨어 로직</title><link>https://jaejin0me.github.io/post/posts116/</link><pubDate>Sun, 24 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts116/</guid><description>각 회사별 사물인터넷 게이트웨이의 하드웨어 로직입니다. 파일로는 About메뉴의 Data Sharing 링크를 따라 가시면 됩니다. 빨간색으로 된 IC가 공격 타켓입니다.</description></item><item><title>샤오미 Iot 게이트웨이 덤프 파일 공유</title><link>https://jaejin0me.github.io/post/posts119/</link><pubDate>Sun, 24 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts119/</guid><description>샤오미 IoT게이트웨이 덤프파일입니다. 이 제품은 JTAG로 연결했어야 됬는데 호환되는 장비가 없어서 판교에 IoT테스트베드라는 곳에서 3번정도 가서 뽑았</description></item><item><title>펌웨어 추출</title><link>https://jaejin0me.github.io/post/posts113/</link><pubDate>Sun, 24 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts113/</guid><description>슬라이드를 참고해 주세요 하드웨어 해킹의 기본인 펌웨어 추출을 설명합니다. 공유기를 대상으로 메모리소자에서 펌웨어를 직접 추출하는 방법입니다. 공유기의 경우</description></item><item><title>필립스 휴 Iot 게이트웨이 펌웨어 공유</title><link>https://jaejin0me.github.io/post/posts118/</link><pubDate>Sun, 24 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts118/</guid><description>필립스 휴 IoT게이트웨이 펌웨어입니다. 이건 제가 뽑은 건지 다운받은파일인지 잘 모르겠네요. 비슷한 시점에 레딧이랑 openwrt 하드웨어해킹 부분에서 좀 핫 했었습니다</description></item><item><title>좌표압축</title><link>https://jaejin0me.github.io/post/posts50/</link><pubDate>Sun, 24 Dec 2017 01:07:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts50/</guid><description>알고리즘을 풀다 보면 좌표압축이라는 테크닉이 필요합니다.저는 좌표압축을 &amp;ldquo;순위가 중요한 알고리즘에서, 입력값의 갯수보다 입력값의 범위가 클 때</description></item><item><title>뉴럴네트워크</title><link>https://jaejin0me.github.io/post/posts129/</link><pubDate>Sun, 24 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts129/</guid><description>해커가 알려주는 뉴럴 네트워크를 공부한 내용 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51</description></item><item><title>HeidiSQL 정리</title><link>https://jaejin0me.github.io/post/posts85/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts85/</guid><description>참고사이트 1.SELECT - 선택해서 보기 위함 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //중복제거SELECTDISTINCT//조건추가WHERE컬럼조건</description></item><item><title>int 배열 오름차순 정렬을 이용해 내림차순 쉽게 구하기</title><link>https://jaejin0me.github.io/post/posts18/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts18/</guid><description>타입에러 때문에 제공하는 정렬함수를 쓸 수 없을때 그리고 형변환 하기 귀찮을 때comparator, comparable의 재정의 없이 간단하게 정렬할 수 있는</description></item><item><title>java.lang.Integer parseInt 메소드 분석</title><link>https://jaejin0me.github.io/post/posts124/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts124/</guid><description>스트링을 숫자로 변화해주는 parseInt 메소드는 parseInt(String) parseInt(String, int) 2가지가 존재합니다. 하지만 parseInt(String)의 경우 내부를 보면 parseInt(Stri</description></item><item><title>SELECT</title><link>https://jaejin0me.github.io/post/posts86/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts86/</guid><description>1.부서번호가 30인 직원의 모든 정보 출력 1 SELECT*FROMHR_EMPLOYEESWHEREDEPARTMENT_ID=30 2.성이 KING인 직원의 모든 정보 출력 1 SELECT*FROMHR_EMPLOYEESWHERELAST_NAME=&amp;#39;KING&amp;#39; 3.입사일이 00년 2월 7일 이후 입사한 직원들 정보를 출력하라.</description></item><item><title>가난한 자의 허세 - 토마스 커루(Thomas Carew)</title><link>https://jaejin0me.github.io/post/posts136/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts136/</guid><description>가난한 자의 허세 가난하고 궁핍한 가엾은 이여,어찌주제넘게도 하늘의 한자리를 요구하는가. 초라한 오두막이나 통 속에 살고거저 내리쬐는 햇볕 속이나 그늘진 샘터에</description></item><item><title>네트워크 정리</title><link>https://jaejin0me.github.io/post/posts130/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts130/</guid><description>중요하거나 모르는 내용 위주로 정리합니다. 1장. 개요 네트워킹 기술을 경로로 구분하면, 서킷 스위칭과 패킷 스위칭을 나뉜다. 서킷 스위칭으로 경로를 모두 정하여</description></item><item><title>데이터베이스 정리</title><link>https://jaejin0me.github.io/post/posts83/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts83/</guid><description>가장 배경지식이 부족한 데이터베이스.. 그래도 비중이 적고 문제가 쉽다고 하니 다행이다. 새로 알게 된 것이나 모르는 내용 위주로 정리를 한다. 인용부호 ' ' 에서만</description></item><item><title>마리아 DB 사용법 모아놓은 블로그</title><link>https://jaejin0me.github.io/post/posts84/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts84/</guid><description>http://blog.naver.com/PostView.nhn?blogId=hmkuak&amp;amp;logNo=220583392375 마리아 DB 사용법을 모아놓은 블로그를 블로그한 블로그의 사이트..</description></item><item><title>만약에(If) - 러디어드 키플링(Rudyard Kipling)</title><link>https://jaejin0me.github.io/post/posts138/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts138/</guid><description>만약에(If) -러디어드 키플링 만약 모두가 이성을 읽고 너를 탓할 때냉정을 유지할 수 있다면 만약 모두가 너를 의심할 때네 자신을 믿고 그들의 의심마저 이해해줄 수 있</description></item><item><title>백준알고리즘 1003번, 피보나치 함수</title><link>https://jaejin0me.github.io/post/posts36/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts36/</guid><description>(n)을 했을때 fib(0),와 fib(1)이 몇번 콜되는지 구하는 문제입니다. 전략 : 전역 변수 2개를 할당해, fib(0)을 부를때 증가시키고, fib</description></item><item><title>백준알고리즘 10828번, 스택</title><link>https://jaejin0me.github.io/post/posts32/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts32/</guid><description>스택의 기본적인 연산 5가지인 push,pop,top,empty,size를 구현하는 문제이다. 별다른 풀이 전략이 필요하지 않다, 그냥 구현만 해내면 그</description></item><item><title>백준알고리즘 10845번, 큐</title><link>https://jaejin0me.github.io/post/posts34/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts34/</guid><description>큐를 구현하는 문제이다. push,pop,empty,size,front,back 함수를 구현해야 한다. 배열을 이용해 구현하였다. 고려해야 할 것은 앞과 끝을 가르키는 위치를 갖고 있어야 된다는 정도이다. 정해진 배열</description></item><item><title>백준알고리즘 1149번, RGB거리</title><link>https://jaejin0me.github.io/post/posts37/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts37/</guid><description>RGB 색상별로 가중치가 주어질 때, 가장 값이 낮게 집을 칠하는 문제입니다. 전략 : 특별한 전략은 필요 없네요. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>백준알고리즘 1167번, 트리의 지름</title><link>https://jaejin0me.github.io/post/posts45/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts45/</guid><description>트리의 지름은 두 vertex간의 길이가 가장 긴 값입니다. 이 문제에서는 간선에 가중치가 있기 때문에 멀어도 길이가 짧은 수 있고 그 반대가 될 수도 있습니다. 트리의</description></item><item><title>백준알고리즘 11725번, 트리의 부모 찾기</title><link>https://jaejin0me.github.io/post/posts43/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts43/</guid><description>연결된 두 vertex의 정보가 주어질 때 각 노드의 부모를 찾아서 2번부터 출력해주는 문제입니다. 처음에 접근할때는 행렬로 풀려고 했는데, 다익스트라 알고리즘</description></item><item><title>백준알고리즘 1753번, 최단경로</title><link>https://jaejin0me.github.io/post/posts42/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts42/</guid><description>다익스트라 알고리즘을 공부하기 위해서 풀어본 문제입니다.. 어렵네요 어려웠어요 휴.. 구현할때 주의하실 점은 인접리스트랑 우선순위큐 꼭 쓰세요! 노드의 갯수</description></item><item><title>백준알고리즘 1874번, 스택 수열</title><link>https://jaejin0me.github.io/post/posts33/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts33/</guid><description>이번 문제에서는 스택을 클래스로 만들어 사용했다. 1~n까지의 수로 이루어진 수열을 스택을 이용해 재현해내는 문제이다. push를 할때는 1부터 순서대로 진행</description></item><item><title>백준알고리즘 1932번, 숫자삼각형</title><link>https://jaejin0me.github.io/post/posts38/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts38/</guid><description>피라미드 형태의 삼각형이 주어질때 아래로 내려가면서 최대의 값을 찾는 문제입니다 전략 : 별다른 전략 필요가 없네요 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description></item><item><title>백준알고리즘 1991번, 트리 사용하기</title><link>https://jaejin0me.github.io/post/posts40/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts40/</guid><description>그래프와 트리쪽 알고리즘이 약해서 요즘 이 파트를 공부하고있습니다. 2진 트리의 원소를 입력받아 순회 종류별로 출력해주는 문제입니다. 재귀적으로 깔끔하게 푸는</description></item><item><title>백준알고리즘 2750번, 수 정렬하기</title><link>https://jaejin0me.github.io/post/posts35/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts35/</guid><description>1~N 까지의 수를 임의로 입력 받아 정렬하는 문제 입니다. 버블, 삽입, 선택 정렬 3가지를 이용해 풀어봤습니다. 버블 정렬만 알고 있었는데 이번 기회로 삽입, 선택 정렬</description></item><item><title>백준알고리즘 7576번, 토마토</title><link>https://jaejin0me.github.io/post/posts41/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts41/</guid><description>토마토의 상태가 행렬로 주어질 때, 모든 토마토가 익는데 걸리는 시간을 구하는 문제입니다. 큐를 이용해서 BFS로 풀었습니다. 공부많이 됐네용. 입력값이 행렬로</description></item><item><title>소망(진정 바라는 것) - 맥스 어만(Max Ehrmann)</title><link>https://jaejin0me.github.io/post/posts137/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts137/</guid><description>진정 바라는 것 -맥스 어만 소란스럽고 바쁜 일상속에서도침묵 안에 평화가 있다는 사실을 기억하십시오 포기하지 말고 가능한한 모든 사람들과 잘 지내도록 하십시오조용</description></item><item><title>스며드는 것 - 안도현</title><link>https://jaejin0me.github.io/post/posts135/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts135/</guid><description>스며드는 것 - 안도현 꽃게가 간장 속에반쯤 몸을 담그고 엎드려 있다등판에 간장이 울컥울컥 쏟아질 때꽃게는 뱃속의 알을 껴안으려고꿈틀거리다가 더 낮게더 바닥 쪽으로</description></item><item><title>용기 - 이규경</title><link>https://jaejin0me.github.io/post/posts134/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts134/</guid><description>넌 충분히 할 수 있어사람들이 말했습니다. 용기를 내야해사람들이 말했습니다. 그래서 나는 용기를내었습니다. 용기를 내서 이렇게말했습니다. 나는 못해요. 용기</description></item><item><title>우리의 사랑의 섬광을... - 윌리엄 블레이크</title><link>https://jaejin0me.github.io/post/posts139/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts139/</guid><description>우리는사랑의 성괌을 견디는 법을배우기 위해잠시 지상에 머문다</description></item><item><title>의자에 어울리는 사람이 되기 위해 - 이원</title><link>https://jaejin0me.github.io/post/posts133/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts133/</guid><description>의자에 어울리는 사람이 되기 위해 곧추 세운 등뼈 아래로엉덩이를 엉거주춤 유지해야 하는이 포즈는 도대체 무엇입니까 각자의 배후를 전적으로 위탁하는 포즈를우리는 언</description></item><item><title>자바 Set, Map</title><link>https://jaejin0me.github.io/post/posts125/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts125/</guid><description>1.Set 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HashSet&amp;lt;Integer&amp;gt; abc = new HashSet&amp;lt;Integer&amp;gt;(); abc.add(1); abc.add(2); abc.add(3); Iterator it = abc.iterator(); Integer temp = 0; while(it.hasNext()) { temp = (Integer) it.next(); System.out.println(temp); } for(Integer item : abc) { System.out.println(item); } 2.Map 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 HashMap&amp;lt;String,Integer&amp;gt; abc = new HashMap&amp;lt;String,Integer&amp;gt;(); abc.put(&amp;#34;a&amp;#34;, 0);</description></item><item><title>자바 쓰레드 관련 정리</title><link>https://jaejin0me.github.io/post/posts122/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts122/</guid><description>자바에서 쓰레드를 사용하는 건 참 쉽죠잉~. 쓰레드 관련 공부한 내용 정리합니다. 쓰레드란 ? 하나의 프로세스 안에서 실제적으로 작업을 처리하는 단위이다 main</description></item><item><title>자바 클래스 관련 정리</title><link>https://jaejin0me.github.io/post/posts123/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts123/</guid><description>문제를 풀다가 틀린 부분이나 새로 알게된 것들을 기술합니다. 시간날때 깔끔하게 정리하겠습니다. 매개변수가 없는 기본 생성자를 작성할 때, 매개변수가 있는 생성자</description></item><item><title>조인과 서브쿼리</title><link>https://jaejin0me.github.io/post/posts87/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts87/</guid><description>EMPLOYESS와 DEPT 을 JOIN하여 부서 번호, 부서명, 이름, 급여를 출력하라. SELECT HR_EMPLOYEES.DEPARTMENT_ID, DEPARTMENT_NAME, LAST_NAME, SALARY FROM HR_EMPLOYEES INNER JOIN HR_DEPARTMENTS ON HR_EMPLOYEES.DEPARTMENT_ID = HR_DEPARTMENTS.DEPARTMENT_ID 이름이 &amp;lsquo;HALL&amp;rsq</description></item><item><title>카카오 코드 페스티벌 예선 4번, 보행자 천국</title><link>https://jaejin0me.github.io/post/posts44/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts44/</guid><description>안녕하세요. 오랜만에 카카오 코드 페스티벌 풀이를 쓰네요.문제가 어렵다 보니 쉽게 손이 안 갑니다. ㅎㅎ 4번 문제는 https://www.welcomekakao.com/learn/challenges/630 에서 확인하실 수가 있습니다. 동적계획법으</description></item><item><title>카카오 코드 페스티벌 예선 5번, 캠핑</title><link>https://jaejin0me.github.io/post/posts46/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts46/</guid><description>안녕하세요. 오늘은 카카오 코드 페스티벌 예선에 나온 5번 캠핑 문제에 대해 풀이를 해보겠습니다. 문제는 https://www.welcomekakao.com/learn/challenges/667 에서 확인하실 수 있습니다. 시간 복잡도간단히 모든 경우</description></item><item><title>카카오 코드 페스티벌 예선 5번, 캠핑 풀이 - 2</title><link>https://jaejin0me.github.io/post/posts47/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts47/</guid><description>이전에 포스팅한 정석 풀이 말고 다른 풀이를 보여드리겠습니다. 다른 정답들을 보다가 출제의도와는 다르지만 최적화를 통해 시간내에 풀었고(하지만 시간 차이는 꽤 납</description></item><item><title>카카오 코드 페스티벌 예선1번, 카카오 프렌즈 컬러링북</title><link>https://jaejin0me.github.io/post/posts39/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts39/</guid><description>처음으로 참가한 알고리즘 대회인데, 이 대회 덕분에 알고리즘 공부를 시작하게 되었죠. 본선 진출 1문제 차이로 탈락했었습니다. 이 문제는 1번 문제인데요, 행렬로</description></item><item><title>파비콘 만드는 곳 추천</title><link>https://jaejin0me.github.io/post/posts112/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts112/</guid><description>플랫폼 별로 다 만들어주고 html코드까지 제공해줌 히트다 히트https://realfavicongenerator.net/</description></item><item><title>풀꽃 - 나태주</title><link>https://jaejin0me.github.io/post/posts140/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts140/</guid><description>자세히 보아야 예쁘다오래 보아야 사랑스럽다 너도 그렇다</description></item><item><title>프로그래머스 - 2 x n 타일링</title><link>https://jaejin0me.github.io/post/posts48/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts48/</guid><description>주의해야 할것은 오버플로우! 나머지 연산이 포인트 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class TryHelloWorld { static long[] dp = new long[10000]; public int tiling(int n) { dp[0] = 1; dp[1] = 2; for(int i=2;i&amp;lt;n;i++) { dp[i] = (dp[i-2]*2)+(dp[i-1]-dp[i-2]); if(dp[i]&amp;gt;99999)</description></item><item><title>프로그래머스 - 2016년</title><link>https://jaejin0me.github.io/post/posts49/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts49/</guid><description>Date 오브젝트 쓰기! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import java.text.ParseException; import java.text.SimpleDateFormat; import java.util.Date; public class TryHelloWorld { public String getDayName(int a, int b) { String answer = &amp;#34;&amp;#34;; SimpleDateFormat sdf = new SimpleDateFormat(&amp;#34;yyyy-MM-dd&amp;#34;); SimpleDateFormat sdf2 = new SimpleDateFormat(&amp;#34;E&amp;#34;); String dateInString</description></item><item><title>프로그래머스 - N개의 최소공배수</title><link>https://jaejin0me.github.io/post/posts17/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts17/</guid><description>2개의 값에 대하여 gcd를 이용해 lcm을 구하는 것을 N개에 대해 반복함 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public class NLCM { public long gcd(long a,long b) { if(a==0) return</description></item><item><title>프로그래머스 - 가운데 글자 가져오기</title><link>https://jaejin0me.github.io/post/posts21/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts21/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class StringExercise{ String getMiddle(String word){ int len = word.length(); if(len%2==0) {//짝수 return word.substring(len/2-1, len/2+1); } else {//홀수 return word.substring(len/2, len/2+1); } } // 아래는 테스트로 출력해 보기 위한 코드입니다. public static</description></item><item><title>프로그래머스 - 가장 큰 정사각형 찾기</title><link>https://jaejin0me.github.io/post/posts5/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts5/</guid><description>이 문제는 이제 익숙해진 유형 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 class TryHelloWorld { public int findLargestSquare(char [][]board) { int max=0; int min=0; for(int i=0;i&amp;lt;board.length;i++) {</description></item><item><title>프로그래머스 - 공항 건설하기</title><link>https://jaejin0me.github.io/post/posts6/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts6/</guid><description>원래 dp로 풀었는데 알고보니, 단순 비교문제였음..그냥 사람수가 가장 많은 도시는 고르면 되는 문제 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26</description></item><item><title>프로그래머스 - 나누어 떨어지는 숫자 배열</title><link>https://jaejin0me.github.io/post/posts26/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts26/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import java.util.Arrays; public class Divisible { public int[] divisible(int[] array, int divisor) { int[] temp = new int[array.length]; int idx = 0; for(int i=0;i&amp;lt;array.length;i++) { if(array[i]%divisor==0) { temp[idx++] = array[i]; } } int[] ret = new int[idx]; for(int i=0;i&amp;lt;idx;i++) { ret[i] = temp[i]; } return</description></item><item><title>프로그래머스 - 다음 큰 숫자</title><link>https://jaejin0me.github.io/post/posts7/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts7/</guid><description>내 풀이는 좀 허접&amp;hellip; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 { public int nextBigNumber(int n) { int answer = 0; char temp; String a = Integer.toBinaryString(n); char[] str = a.toCharArray(); int idx</description></item><item><title>프로그래머스 - 땅따먹기 게임</title><link>https://jaejin0me.github.io/post/posts8/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts8/</guid><description>dp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import java.util.Arrays; public class Hopscotch { int hopscotch(int[][] board, int size) { for(int i=1;i&amp;lt;size;i++) { board[i][0] += board[i-1][1] &amp;gt; board[i-1][2] ? (board[i-1][1] &amp;gt; board[i-1][3] ? board[i-1][1] : board[i-1][3]) : board[i-1][2] &amp;gt; board[i-1][3] ? board[i-1][2] : board[i-1][3]; board[i][1] += board[i-1][0] &amp;gt; board[i-1][2] ? (board[i-1][0] &amp;gt;</description></item><item><title>프로그래머스 - 멀리 뛰기</title><link>https://jaejin0me.github.io/post/posts9/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts9/</guid><description>dp dp[i] = dp[i-2] + dp[i-1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public class JumpCase { static int[] dp = new int[10000]; public int jumpCase(int num) { int answer = 0; dp[0] = 1; dp[1] = 2; for(int i=2;i&amp;lt;num;i++) { dp[i] = dp[i-2]+dp[i-1]; } return dp[num-1]; } public static void main(String[] args) { JumpCase</description></item><item><title>프로그래머스 - 문자열 내림차순으로 배치하기</title><link>https://jaejin0me.github.io/post/posts11/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts11/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import java.util.Arrays; public class ReverseStr { public String reverseStr(String str){ String ans = &amp;#34;&amp;#34;; char[] temp = str.toCharArray(); Arrays.sort(temp); for(int i=0;i&amp;lt;temp.length;i++) { ans+=temp[temp.length-1-i]; } return ans; } // 아래는 테스트로 출력해 보기 위한 코드입니다. public</description></item><item><title>프로그래머스 - 삼각형 출력하기</title><link>https://jaejin0me.github.io/post/posts22/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts22/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class PrintTriangle { public String printTriangle(int num){ String ret = &amp;#34;&amp;#34;; for(int i=0;i&amp;lt;num;i++) { for(int j=0;j&amp;lt;=i;j++) { ret+=&amp;#34;*&amp;#34;; } ret+=&amp;#34;\n&amp;#34;; } return ret; } // 아래는 테스트로 출력해 보기 위한 코드입니다. public static void main(String[] args)</description></item><item><title>프로그래머스 - 서울에서김서방찾기</title><link>https://jaejin0me.github.io/post/posts23/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts23/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public class FindKim { public String findKim(String[] seoul){ //x에 김서방의 위치를 저장하세요. int x = 0; for(int i=0;i&amp;lt;seoul.length;i++) { if(seoul[i].equals(&amp;#34;Kim&amp;#34;)) { x=i; break; } } return &amp;#34;김서방은</description></item><item><title>프로그래머스 - 소수 찾기</title><link>https://jaejin0me.github.io/post/posts12/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts12/</guid><description>label이 break, continue와 사용가능해서 좋은 자바:)좀 더 좋은 소수찾는 방법으로 풀어봐야지 한번 더 시도해봐야지 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16</description></item><item><title>프로그래머스 - 숫자의 표현</title><link>https://jaejin0me.github.io/post/posts13/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts13/</guid><description>내 코드 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 public class Expressions { public int expressions(int num) { int sum=0; int first = 0; int cnt=0; for(int i=1;i&amp;lt;=num/2;i++) { sum = 0; first = i; while(true) { sum+=first++; if(sum==num) { cnt++; break; } else if(sum&amp;gt;num) {</description></item><item><title>프로그래머스 - 스트링을 숫자로 바꾸기</title><link>https://jaejin0me.github.io/post/posts24/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts24/</guid><description>1 2 3 4 5 6 7 8 9 10 11 public class StrToInt { public int getStrToInt(String str) { return Integer.parseInt(str); } //아래는 테스트로 출력해 보기 위한 코드입니다. public static void main(String args[]) { StrToInt strToInt = new StrToInt(); System.out.println(strToInt.getStrToInt(&amp;#34;-1234&amp;#34;)); } } 직접 변환하는 것이 문제의</description></item><item><title>프로그래머스 - 시저 암호</title><link>https://jaejin0me.github.io/post/posts14/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts14/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Caesar { String caesar(String s, int n) { n%=26; String result = &amp;#34;&amp;#34;; char[] temp = s.toCharArray(); for(int i=0;i&amp;lt;temp.length;i++) { if(temp[i]&amp;gt;=&amp;#39;a&amp;#39; &amp;amp;&amp;amp;temp[i]&amp;lt;=&amp;#39;z&amp;#39;) temp[i] = (char) ((temp[i]+n)&amp;gt;&amp;#39;z&amp;#39; ? (temp[i]+n-1)%&amp;#39;z&amp;#39;+&amp;#39;a&amp;#39; : (temp[i]+n)); else if(temp[i]&amp;gt;=&amp;#39;A&amp;#39; &amp;amp;&amp;amp;temp[i]&amp;lt;=&amp;#39;Z&amp;#39;) temp[i] = (char) ((temp[i]+n)&amp;gt;&amp;#39;Z&amp;#39; ? (temp[i]+n-1)%&amp;#39;Z&amp;#39;+&amp;#39;A&amp;#39; : (temp[i]+n)); result+=temp[i]; } return result; } public</description></item><item><title>프로그래머스 - 야근 지수</title><link>https://jaejin0me.github.io/post/posts15/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts15/</guid><description>좀 지저분하긴해도 시간초과 까지 개선한 코드.. N^2으로 풀어도 5초가 넘어서(정답 처리는 됨) 좀더 최적화 해봄 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description></item><item><title>프로그래머스 - 약수의 합</title><link>https://jaejin0me.github.io/post/posts25/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts25/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class SumDivisor { public int sumDivisor(int num) { int answer = 0; for(int i=1;i&amp;lt;=num/2;i++) { if(num%i==0) { answer+=i; } } answer+=num; return answer; } // 아래는 테스트로 출력해 보기 위한 코드입니다. public static void main(String[] args)</description></item><item><title>프로그래머스 - 정수 내림차순으로 배치하기</title><link>https://jaejin0me.github.io/post/posts16/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts16/</guid><description>toCharArray를 쓰니 간편하군욤 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import java.util.Arrays; public class ReverseInt { public int reverseInt(int n){ int answer = 0; String a = Integer.toString(n); char[] tmp = a.toCharArray(); Arrays.sort(tmp); for(int i=0;i&amp;lt;a.length();i++) { answer*=10; answer+=tmp[a.length()-1-i]-&amp;#39;0&amp;#39;; }</description></item><item><title>프로그래머스 - 줄서는 방법</title><link>https://jaejin0me.github.io/post/posts4/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts4/</guid><description>문제가 점점 어려워지는군욤 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import java.util.ArrayList; import java.util.Arrays; public class LineCombination { public int[] setAlign(int n, long k) { int[] answer = new int[n]; ArrayList&amp;lt;Integer&amp;gt; list =</description></item><item><title>프로그래머스 - 최고의 집합</title><link>https://jaejin0me.github.io/post/posts3/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts3/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import java.util.Arrays; //테스트로 출력해 보기 위한 코드입니다. public class BestSet { public int[] bestSet(int n, int s){ int[] answer = null; if(n&amp;gt;s) { answer = new</description></item><item><title>프로그래머스 - 최대값과 최소값</title><link>https://jaejin0me.github.io/post/posts28/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts28/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import java.util.Vector; public class GetMinMaxString { public String getMinMaxString(String str) { Integer min=Integer.MAX_VALUE,max=Integer.MIN_VALUE; String[] sepstr = str.split(&amp;#34; &amp;#34;); Vector&amp;lt;Integer&amp;gt; vec = new Vector&amp;lt;Integer&amp;gt;(); for(int i=0;i&amp;lt;sepstr.length;i++) { vec.addElement(Integer.parseInt(sepstr[i])); } for(int i=0;i&amp;lt;vec.size();i++) { if(vec.get(i)&amp;lt;min) { min = vec.get(i); } if(vec.get(i) &amp;gt; max) {</description></item><item><title>프로그래머스 - 최대공약수와 최소공배수</title><link>https://jaejin0me.github.io/post/posts31/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts31/</guid><description>유클리트 호제법으로 gcd를 구하고, gcd를 이용해 lcm을 구했다. 포인트는 gcd를 이용해 lcm을 구하는 것이다. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16</description></item><item><title>프로그래머스 - 최솟값 만들기</title><link>https://jaejin0me.github.io/post/posts19/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts19/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import java.util.Arrays; public class TryHelloWorld { public int getMinSum(int []A, int []B) { int answer = 0; Arrays.sort(A); Arrays.sort(B); for(int i=0;i&amp;lt;B.length;i++) { answer += A[i]*B[B.length-1-i]; } return answer; } public static void main(String[] args) { TryHelloWorld test = new TryHelloWorld(); int []A = {1,2}; int</description></item><item><title>프로그래머스 - 콜라츠 추측</title><link>https://jaejin0me.github.io/post/posts2/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts2/</guid><description>연산도중에 int형의 범위를 넘어갈 수 있기 때문에 long으로 바꿔주는 것이 포인트!시간 많이 날림 ㅜ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</description></item><item><title>프로그래머스 - 평균구하기</title><link>https://jaejin0me.github.io/post/posts30/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts30/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class GetMean { public int getMean(int[] array) { int sum=0; for(int i=0;i&amp;lt;array.length;i++) { sum+=array[i]; } return sum/array.length; } public static void main(String[] args) { int x[] = {5, 4, 3}; GetMean getMean = new GetMean(); // 아래는 테스트로 출력해 보기 위한 코드</description></item><item><title>프로그래머스 - 피보나치 수</title><link>https://jaejin0me.github.io/post/posts27/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts27/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Fibonacci { public long fibonacci(int num) { if(num==0) { return 0; } else if(num==1){ return 1; } else{ return fibonacci(num-1)+fibonacci(num-2); } } // 아래는 테스트로 출력해 보기 위한 코드입니다. public static void main(String[] args)</description></item><item><title>프로그래머스 - 하샤드 수</title><link>https://jaejin0me.github.io/post/posts20/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts20/</guid><description>나의 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import java.util.Arrays; public class TryHelloWorld { public int getMinSum(int []A, int []B) { int answer = 0; Arrays.sort(A); Arrays.sort(B); for(int i=0;i&amp;lt;B.length;i++) { answer += A[i]*B[B.length-1-i]; } return answer; } public static void main(String[] args) { TryHelloWorld test = new TryHelloWorld(); int</description></item><item><title>프로그래머스 - 행렬의 곱셈</title><link>https://jaejin0me.github.io/post/posts1/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts1/</guid><description>머리속에서는 쉽지만 막상 구현하면 헷갈려서 잘 틀리는 행렬곱&amp;hellip; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class ProductMatrix { public int[][] productMatrix(int[][] A, int[][] B) { if(A[0].length!=B.length) return null;</description></item><item><title>프로그래머스 - 행렬의 덧셈</title><link>https://jaejin0me.github.io/post/posts29/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts29/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class SumMatrix { int[][] sumMatrix(int[][] A, int[][] B) { int[][] answer = new int[A.length][A[0].length]; for(int i=0;i&amp;lt;A.length;i++) { for(int j=0;j&amp;lt;A[0].length;j++) { answer[i][j] = A[i][j]+B[i][j]; } } return answer; } // 아래는 테스트로 출력해 보기 위한</description></item><item><title>2017 암호경진대호 3번</title><link>https://jaejin0me.github.io/post/posts73/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts73/</guid><description>부채널 분석 문제인데요. 사전지식이 없는 쪽이라 마지막에 풀었는데 시간이 좀더 있었으면 했는데 아쉽네요. 푸신분 코드좀 주세용 matlab 코딩 실력이 좋았더라면..ㅜ 풀</description></item><item><title>2017 암호경진대회 1번</title><link>https://jaejin0me.github.io/post/posts71/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts71/</guid><description>알파벳으로 구성된 평문을 2개의 값으로 shift하는 key table로 암호화한 암호문이 주어졌을때 평문을 찾는 문제입니다. 소문제 1번은 경우 암호문길이가 길</description></item><item><title>2017 암호경진대회 4번</title><link>https://jaejin0me.github.io/post/posts74/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts74/</guid><description>가장 쉽게 풀었죠. 30분도 안걸렸던거 같네요. 프로그램을 통해서 암호문의 유효성이 검증되는데요, 역공학을 통해서 암호문을 쉽게 찾을 수 있습니다. 답안 : Snow White</description></item><item><title>2017 암호경진대회 5번</title><link>https://jaejin0me.github.io/post/posts75/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts75/</guid><description>jpeg 포렌식인데요. 암호화된 부분은 찾았지만 복호화 하지 못했네요 ㅜ 푸신 분 있으면 좀 알려주세용 풀이: 제공되는 파일을 살펴 본 결과 만든 날짜와 수정한 날짜의 값이 이</description></item><item><title>블로그 이전 끝~</title><link>https://jaejin0me.github.io/post/posts78/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts78/</guid><description>앞으로 나의 이야기는 여기서!</description></item><item><title>실수치 회로, 역전파</title><link>https://jaejin0me.github.io/post/posts128/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts128/</guid><description>해커가 알려주는 뉴럴 네트워크를 공부한 내용 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51</description></item><item><title>암호경진대회 결과</title><link>https://jaejin0me.github.io/post/posts72/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts72/</guid><description>1달 동안 암호경진대회 문제를 풀어서 냈는데.. 입상하지 못했네요. 5문제 중에서 3.5문제를 풀어서 그래도 입상권인줄 알았는데.. 아쉽습니다. 그리고 수상</description></item><item><title>취하라 - 샤를 보들레르</title><link>https://jaejin0me.github.io/post/posts141/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts141/</guid><description>미생에 나와 대중적으로 유명해진 시지요 ㅎㅎ 우리 모두 다같이 취합시다 건배~ 취하라 - 샤를 보들레르 항상 취해 있어야 한다.모든게 거기에 있다.그것이 유일한 문제</description></item><item><title>NHN ent Feel the toast 탈락, 국가보안기술연구소 전공면접 탈락</title><link>https://jaejin0me.github.io/post/20171123/</link><pubDate>Thu, 23 Nov 2017 11:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20171123/</guid><description>탈락 고배를 마시네요.. 2군데 중에 하나는 붙을 줄 알았는데 두 개다 떨어져서 마음을 추스르기 위해 잠시 쉬다가 다시 준비하고 있습니다. NHN ent 같은 경우에는 Feel the TOAST 리</description></item><item><title>NHN ent Feel the toast 후기(IT보안)</title><link>https://jaejin0me.github.io/post/20171114/</link><pubDate>Tue, 14 Nov 2017 11:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20171114/</guid><description>안녕하세요, 저번에 금요일에 보았던 Feel the toast 후기를 남겨드리겠습니다. Feel the toast를 준비하면서 SW개발과 관련된 후기들은 많이 봤지만, IT보안 직무와 관</description></item><item><title>국가보안기술연구소 1차 면접 후기</title><link>https://jaejin0me.github.io/post/20171103/</link><pubDate>Fri, 03 Nov 2017 11:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20171103/</guid><description>오늘 국가보안연구소 1차 면접을 다녀왔습니다. 뭔가.. 보안이 되게 삼엄한곳이라 자세히는 말씀못드리겠네요. 참고로 사실 자세히 말할것도 없습니다. 몇시간 있</description></item><item><title>Pre-test 2차 기출 모음</title><link>https://jaejin0me.github.io/post/20171018/</link><pubDate>Wed, 18 Oct 2017 11:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20171018/</guid><description>pre-test 후기들을 보면서 기출문제들을 간추려 보았습니다. 정리하지 않고 그냥 모아놓은것이지 때문에 내용이 난잡할 수 있어요. 프로그래밍 가장 많은 문제가 나오며 자바위</description></item></channel></rss>