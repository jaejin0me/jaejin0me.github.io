<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>database on Jaejin's blog</title><link>https://jaejin0me.github.io/categories/database/</link><description>Recent content in database on Jaejin's blog</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>Jaejin Jang</copyright><lastBuildDate>Thu, 06 Dec 2018 00:20:56 +0900</lastBuildDate><atom:link href="https://jaejin0me.github.io/categories/database/index.xml" rel="self" type="application/rss+xml"/><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 11</title><link>https://jaejin0me.github.io/post/posts101/</link><pubDate>Thu, 06 Dec 2018 00:20:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts101/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 11. ER모델 Section 1. ER모델의 개념 개념적 데이터 모델의 대표적인 것 개체 집합, 속성 집합, 개체 집합 간의 관계 집</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 14</title><link>https://jaejin0me.github.io/post/posts100/</link><pubDate>Wed, 05 Dec 2018 01:11:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts100/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 14. 트랜잭션 Section 1. 트랜잭션의 개념 트랜잭션(transaction) : 데이터베이스 내에서 하나의 논리적</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 12</title><link>https://jaejin0me.github.io/post/posts99/</link><pubDate>Tue, 04 Dec 2018 01:26:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts99/</guid><description>Ch 12. 정규화 Section 1. 이상 현상 anomaly : 불필요한 NULL이 삽입되거나, 연쇄 삭제, 데이터 일관성이 깨지는 현상 1.1 삽입 현상(insertion anomaly) 데이터 삽입 시 특정 열</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 8</title><link>https://jaejin0me.github.io/post/posts98/</link><pubDate>Tue, 04 Dec 2018 00:48:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts98/</guid><description>Ch 8. 데이터 검색 Section 1. 기본적인 SELECT 명령문 SELECT [DISTINCT] 열_이름 ~ FROM 테이블_이름 [WHERE 조건 [중첩질의]] [GROUP BY 열_이름[ ]] [HAVING 조건] [ORDER BY 열_이름 ~ [ASC|DESC]]; HAVING 절은 GROUP BY 절의 결과</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 7</title><link>https://jaejin0me.github.io/post/posts97/</link><pubDate>Thu, 29 Nov 2018 00:30:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts97/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 7. 데이터 관리 Section 1. 데이터 입력 INSERT INTO 테이블_이름 [열_이름 ~] VALUES (값 ~); 1.1 테이블에 데잍를 직접입력하는 방법</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 6</title><link>https://jaejin0me.github.io/post/posts96/</link><pubDate>Thu, 29 Nov 2018 00:27:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts96/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 6. 테이블 관리 Section 1. 테이블 생성 1.1 데이터 형식을 사용한 테이블 정의 CREATE TABLE 테이블이름 ( 열_이름 데이터 형식 [NOT NULL,</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 5</title><link>https://jaejin0me.github.io/post/posts95/</link><pubDate>Thu, 29 Nov 2018 00:17:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts95/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 5. SQL Server 설치 및 예제 데이터 베이스 구축 Section 2. 예제 데이터베이스 구축 데이터베이스는 시스템 DB와 사용자 DB로</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 4</title><link>https://jaejin0me.github.io/post/posts94/</link><pubDate>Wed, 28 Nov 2018 01:15:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts94/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 4. 관계 대수 Section 1. 관계 대수 관계 대수는 릴레이션을 처리하는 연산의 집합 관계 대수의 피연산자는 릴레이션 연산 결</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 3</title><link>https://jaejin0me.github.io/post/posts93/</link><pubDate>Wed, 28 Nov 2018 00:50:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts93/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 3. 관계 데이터 모델과 제약조건 Section 1. 관계 데이터 모델 관계 데이터 모델(relation data model) 집합론과 논리 분</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 2</title><link>https://jaejin0me.github.io/post/posts92/</link><pubDate>Tue, 27 Nov 2018 01:30:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts92/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 2. 데이터 모델 Section 1. 데이터 모델 1.1 데이터 모델의 개념 데이터베이스의 구조를 단순화, 추상화하여 체계적으로 표</description></item><item><title>책뿌수기 - 기초가 든든한 데이터 베이스 1</title><link>https://jaejin0me.github.io/post/posts91/</link><pubDate>Mon, 26 Nov 2018 00:07:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts91/</guid><description>인용하는 그림은 다양한 곳에서 가져왔음을 밝힙니다 Ch 1. DB 시스템 Section 1. DB 1.1 데이터와 데이터 베이스 개념 DB = 필요한 데이터를 모아 놓은 것 1.2 데이터와 정보 데이터 : 관</description></item><item><title>오라클 DB 문제 풀이(2)</title><link>https://jaejin0me.github.io/post/posts90/</link><pubDate>Sun, 11 Feb 2018 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts90/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>오라클 DB 문제 풀이</title><link>https://jaejin0me.github.io/post/posts89/</link><pubDate>Wed, 07 Feb 2018 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts89/</guid><description>오라클 DB의 문제이만 Mysql 계열의 MariaDB로 풀었습니다. 제가 구한 샘플데이터에 맞게 문제의 수치도 조금 바꿨습니다. 풀면서 느낀 SQL의 가장 큰 차이는 M</description></item><item><title>Join</title><link>https://jaejin0me.github.io/post/posts88/</link><pubDate>Mon, 05 Feb 2018 01:37:56 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts88/</guid><description>1. Join Join을 통해서 2개 이상의 테이블을 연결할 수 있다. Join은 기본적으로 기본키나 외부키의 값의 연관에 의해 성립되지만, 논리적인 값들의 연관만으로도</description></item><item><title>HeidiSQL 정리</title><link>https://jaejin0me.github.io/post/posts85/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts85/</guid><description>참고사이트 1.SELECT - 선택해서 보기 위함 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //중복제거 SELECT DISTINCT //조건 추가 WHERE 컬럼조건 //특정 패턴의 컬럼 LIKE //이산적 값</description></item><item><title>SELECT</title><link>https://jaejin0me.github.io/post/posts86/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts86/</guid><description>1.부서번호가 30인 직원의 모든 정보 출력 1 SELECT * FROM HR_EMPLOYEES WHERE DEPARTMENT_ID=30 2.성이 KING인 직원의 모든 정보 출력 1 SELECT * FROM HR_EMPLOYEES WHERE LAST_NAME=&amp;#39;KING&amp;#39; 3.입사일이 00년 2월 7일 이후 입사한 직</description></item><item><title>데이터베이스 정리</title><link>https://jaejin0me.github.io/post/posts83/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts83/</guid><description>가장 배경지식이 부족한 데이터베이스.. 그래도 비중이 적고 문제가 쉽다고 하니 다행이다. 새로 알게 된 것이나 모르는 내용 위주로 정리를 한다. 인용부호 ' ' 에서만</description></item><item><title>마리아 DB 사용법 모아놓은 블로그</title><link>https://jaejin0me.github.io/post/posts84/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts84/</guid><description>http://blog.naver.com/PostView.nhn?blogId=hmkuak&amp;amp;logNo=220583392375 마리아 DB 사용법을 모아놓은 블로그를 블로그한 블로그의 사이트..</description></item><item><title>조인과 서브쿼리</title><link>https://jaejin0me.github.io/post/posts87/</link><pubDate>Sat, 23 Dec 2017 01:37:56 +0800</pubDate><guid>https://jaejin0me.github.io/post/posts87/</guid><description>EMPLOYESS와 DEPT 을 JOIN하여 부서 번호, 부서명, 이름, 급여를 출력하라. SELECT HR_EMPLOYEES.DEPARTMENT_ID, DEPARTMENT_NAME, LAST_NAME, SALARY FROM HR_EMPLOYEES INNER JOIN HR_DEPARTMENTS ON HR_EMPLOYEES.DEPARTMENT_ID = HR_DEPARTMENTS.DEPARTMENT_ID 이름이 &amp;lsquo;HALL&amp;rsq</description></item></channel></rss>