<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>도커 on Jaejin's blog</title><link>https://jaejin0me.github.io/categories/%EB%8F%84%EC%BB%A4/</link><description>Recent content in 도커 on Jaejin's blog</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>Jaejin Jang</copyright><lastBuildDate>Sun, 09 Dec 2018 00:15:15 +0900</lastBuildDate><atom:link href="https://jaejin0me.github.io/categories/%EB%8F%84%EC%BB%A4/index.xml" rel="self" type="application/rss+xml"/><item><title>도커란???</title><link>https://jaejin0me.github.io/post/posts110/</link><pubDate>Sun, 09 Dec 2018 00:15:15 +0900</pubDate><guid>https://jaejin0me.github.io/post/posts110/</guid><description>&lt;p>&lt;em>&lt;a href="https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html">초보를 위한 도커 안내서 - 도커란 무엇인가?&lt;/a> 를 보고 간추린 내용 입니다.&lt;/em>&lt;/p>
&lt;h3 id="도커--컨테이너-기반의-오픈소스-가상화-플랫폼">도커 : 컨테이너 기반의 오픈소스 가상화 플랫폼&lt;/h3>
&lt;h3 id="컨테이너--격리된-공간에서-프로세스가-동작하는-기술프로세스-가상화">컨테이너 : 격리된 공간에서 프로세스가 동작하는 기술(프로세스 가상화)&lt;/h3>
&lt;h3 id="기존의-가상화-방식--os-가상화">기존의 가상화 방식 : OS 가상화&lt;/h3>
&lt;ul>
&lt;li>비교적 사용법이 간단하지만 무겁고 느리다&lt;/li>
&lt;li>개선하기 위해 KVM(Kernel-based Virtual Machine)과 반가상화(Paravirtualization) 방식의 Xen이 등장한다. 이 방식은 게스트 OS가 필요하긴 하지만 전체 OS를 가상화 하는&lt;br>
방식이 아니였기 때문에 호스트형 가상화 방식에 비해 성능이 향상 되었다. OpenStack, AWS, Rackspace 같은 클라우드 서비스에서 가상 컴퓨팅기술의 기반이 되었다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img loading="lazy" src="https://jaejin0me.github.io/posts110_1.jpg" alt="Fig" title="posts110_1.jpg" />
&lt;/p></description></item></channel></rss>