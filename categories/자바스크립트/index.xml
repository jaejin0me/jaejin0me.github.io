<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>자바스크립트 on Jaejin's blog</title><link>https://jaejin0me.github.io/categories/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/</link><description>Recent content in 자바스크립트 on Jaejin's blog</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>Jaejin Jang</copyright><lastBuildDate>Fri, 25 Mar 2022 17:20:52 +0900</lastBuildDate><atom:link href="https://jaejin0me.github.io/categories/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/index.xml" rel="self" type="application/rss+xml"/><item><title>몰입! 자바스크립트 - 29장 자바스크립트 활용</title><link>https://jaejin0me.github.io/post/20220325/</link><pubDate>Fri, 25 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220325/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2022.03.25 5절까지 포스팅&lt;/li>
&lt;li>2022.03.26 7절 제외하고 11절까지 포스팅&lt;/li>
&lt;/ul>
&lt;p>&lt;em>​모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
와.. 드디어 마지막 장이네요. 긴 여정이 끝났습니다. 고생한 나 자신에게 박수~!&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 28장 자바스크립트 객체 지향 프로그래밍</title><link>https://jaejin0me.github.io/post/20220322/</link><pubDate>Tue, 22 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220322/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2022.03.22 6절까지 포스팅&lt;/li>
&lt;li>2022.03.24 10절까지 포스팅&lt;/li>
&lt;/ul>
&lt;p>&lt;em>​모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 27장 this 바인딩 오브젝트</title><link>https://jaejin0me.github.io/post/20220319/</link><pubDate>Sat, 19 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220319/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2022.03.19 8절까지 포스팅&lt;/li>
&lt;li>2022.03.20 15절까지 포스팅&lt;/li>
&lt;/ul>
&lt;p>&lt;em>​모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 26장 Function 인스턴스</title><link>https://jaejin0me.github.io/post/20220316/</link><pubDate>Wed, 16 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220316/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2022.03.16 1절 포스팅&lt;/li>
&lt;li>2022.03.16 6절 까지 포스팅&lt;/li>
&lt;li>2022.03.18 14절 까지 포스팅&lt;/li>
&lt;/ul>
&lt;p>&lt;em>​모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 25장 실행 컨텍스트</title><link>https://jaejin0me.github.io/post/20220314/</link><pubDate>Mon, 14 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220314/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2022.03.14 포스팅&lt;/li>
&lt;li>2022.03.15 수정&lt;/li>
&lt;li>2022.03.16 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>​모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 22장 아규먼트 오브젝트</title><link>https://jaejin0me.github.io/post/20220303/</link><pubDate>Thu, 03 Mar 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220303/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2022.03.03 포스팅&lt;/li>
&lt;li>2022.03.09 그림 추가&lt;/li>
&lt;/ul>
&lt;p>&lt;em>​모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 24장 렉시컬 환경</title><link>https://jaejin0me.github.io/post/20220210/</link><pubDate>Thu, 10 Feb 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220210/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2022.02.10 포스팅
​
&lt;em>​모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/li>
&lt;/ul>
&lt;h2 id="241-아키텍처-메커니즘-접근">24.1 아키텍처, 메커니즘 접근&lt;/h2>
&lt;ul>
&lt;li>이 장에서는 js 엔진이 코드를 어떻게 처리하는지 다룹니다.&lt;/li>
&lt;li>함수가 호출되면 함수 안으로 js 엔진이 이동한다. 이때 엔진은 준비, 초기화, 실행 단계로 나누어 처리합니다. 렉시컬 환경이 준비 단계이고, 실행 컨텍스트(Execution Context)가 초기화 단계와 실행단계 입니다.&lt;/li>
&lt;li>렉시컬 환경이 개념 중심의 메커니즘이고 다음 장의 실행 컨텍스트가 구현 중심의 메커니즘 입니다.&lt;/li>
&lt;/ul>
&lt;h2 id="242-실행-컨텍스트-개요">24.2 실행 컨텍스트 개요&lt;/h2>
&lt;ul>
&lt;li>함수가 호출되면 js 엔진은 호출된 함수 안으로 들어가 코드를 해석하고 실행합니다. 해석한 결과를 저장하고 함수 코드를 실행할 영역이 필요한데, 이 영역은 실행 컨텍스트(Execution Contexts)라고 합니다. 함수가 호출되면 우선 EC를 이 안에서 함수 안의 코드를 해석하고 실행합니다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">실행 컨텍스트 처리
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 함수를 호출
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 실행 컨텍스트 생성
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 렉시컬 환경 컴포넌트 생섬
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 변수 환경 컴포넌트 생성
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. this 컴포넌트 생성
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. 호출한 함수 앞에 작성한 오브젝트(없으면 글로벌 오브젝트)를 this 바인딩 컴포넌트에 설정한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> this.xxx 호출이 가능해진다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7. 렉시컬 환경을 생성한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8. 환경 레코드를 생성하여 렉시컬 환경에 첨부한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9. 외부 렉시컬 환경 참조를 생성하여 렉시컬 환경에 첨부한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10. Function 오브젝트의 [[Scope]]를 외부 렉시컬 환경 참조에 첨부한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">11. 렉시컬 환경을 렉시컬 환경 컴포넌트와 변수 환경 컴포넌트에 설정한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">12. 호출한 함수의 파라미터 값을 호출된 함수의 파라미터 이름에 매핑한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">13. 함수 선언문을 Function 오브젝트로 생성
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">14. 함수 표현식과 변수에 초깃값을 설정
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">15. 함수 안의 자바스크립트 코드를 실행한다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="243-렉시컬-환경">24.3 렉시컬 환경&lt;/h2>
&lt;ul>
&lt;li>Lexical Env. 는 js 코드의 실행환경, 범위를 구조적으로 엮으면서 독립적으로 실행하기 위한 메커니즘으로 ES5 스펙상의 입니다.&lt;/li>
&lt;li>{ name: value } 형태로 저장하여 이름과 값을 묶어줍니다. js 엔진은 함수의 초기화 단계에서 해석한 함수가 변수를 식별할 수 있도록 {name: value} 형태로 기록하며 그곳이 LE 입니다.&lt;/li>
&lt;li>이름이 없으면 기록할 수 없으므로 이름이 없는 함수는 바로 실행되도록 해야 하며 자바스크립트는 이를 위한 메커니즘을 제공합니다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">LE = {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ER: 값, // 함수, 변수 기록
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OLDER: 값, // caller의 Scope
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>이름을 찾을 때 ER에서 찾고 없으면 OLER에서 찾습니다. 외부의 스코프에 바로 접근할 수 있으므로 속도가 빠릅니다.&lt;/li>
&lt;/ul>
&lt;h2 id="244-외부-렉시컬-환경참조">24.4 외부 렉시컬 환경참조&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">형성과정
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 함수를 호출한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. EC를 생성한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. LE를 생성한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. ER을 생성하여 LE에 첨부한다. (함수 코드를 해석하기 전이기 때문에 값을 설정하지는 못한다.)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. OLER 생성하여 LE에 첨부한다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. OLER에 참조값을 설정한다. (이 시점에 Function 오브젝트의 [[Scope]]에 접근가능하기 떄문에 설정가능)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>ES3에서는 식별자를 찾지 못하면 스코프 체인을 통해 근접한 스코프에서 찾았으나, ES5는 LE를 통해 근접한 스코프에 바로 접근가능하기 때문에 빠르다.&lt;/li>
&lt;/ul>
&lt;h2 id="245-스코프와-외부-렉시컬-환경-참조">24.5 스코프와 외부 렉시컬 환경 참조&lt;/h2>
&lt;h2 id="246-환경레코드er">24.6 환경레코드(ER)&lt;/h2>
&lt;ul>
&lt;li>함수안에 작성한 함수와 변수를 사용하기 위해서는 js 엔진이 인식할 수 있는 영역에 기록해야 한다. 기록하는 곳이 LE의 ER이다.&lt;/li>
&lt;li>함수, 변수 이름을 식별자라고 하며 ER에 식별자를 기록하는 것을 바인딩이라고 한다. ER에서 식별자를 찾는 것을 식별자 해결(Identifier Resolution)이라고 하며 해결의 전반적인 규칙을 Rules라고 한다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">LE = {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ER: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DER(Declarative Env. Record): {}, // Function, 변수, catch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OER(Object Env. Record): {}, // 글로벌 오브젝트의 변수, 함수, with
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OLDER: {}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="247-선언적-환경-레코드-der">24.7 선언적 환경 레코드 DER&lt;/h2>
&lt;ul>
&lt;li>함수, 변수, catch 문이 대상입니다. 함수안의 코드를 해석하기 전에 먼저 DER을 생성한다. 함수코드를 실행하기 위한 준비입니다.&lt;/li>
&lt;li>함수를 호출하면 엔진은 우선 EC를 생성한다. 그리고 LE를 생성하며 ER, DER, OER, OLER을 생성하여 첨부합니다.&lt;/li>
&lt;li>함수와 변수는 DER에 바인딩 되지만 코드해석 전이기 때문에 값이 설정되진 않습니다.&lt;/li>
&lt;/ul>
&lt;h2 id="248-오브젝트-환경-레코드">24.8 오브젝트 환경 레코드&lt;/h2>
&lt;ul>
&lt;li>글로벌 오브젝트와 with문이 OER의 대상입니다. 글로벌 오브젝트와 with문의 처리가 달라 분리하여 다룹니다. 이번 장에서는 with문을 다룹니다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">LE = {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ER: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OER(Object Env. Record): {}, // 글로벌 오브젝트의 변수, 함수, with
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OLER: {} // 처음 실행할 때의 LE, with문을 여러번 실행하더라도 동일한 OLER을 참조한다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>strict모드 사용시 with문을 에러가 발생합니다. with문은 OLER은 동일하나 with 문을 실행할때 마다 EC, LE를 생성하기 때문에 ES5가 추구하는바에 맞지 않기 때문입니다.&lt;/li>
&lt;/ul>
&lt;h2 id="239-글로벌-환경">23.9 글로벌 환경&lt;/h2>
&lt;ul>
&lt;li>글로벌 환경은 글로벌 오브젝트를 위한 LE입니다. 프로그램 전체를 통해 하나만 존재하며 함수로 생성하는 LE와 형태가 같습니다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">LE = {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ER: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OER(Object Env. Record): 글로벌 오브젝트 바인딩
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OLER: null // 처음 실행할 때의 LE, with문을 여러번 실행하더라도 동일한 OLER을 참조한다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>자바스크립트가 렌더링을 시작하면 자바스크립트 실행 환경(빌트인 오브젝트, 빌트인 타입 등)을 설정한 후 글로벌 환경을 생성합니다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">글로벌 환경 형성 과정
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 글로벌 환경을 생성합니다. LE = {} 형태입니다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. ER를 생성하여 첨부합니다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. OER을 생성하여 첨부합니다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. OLER을 생성하여 첨부합니다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. 글로벌 오브젝트를 생성합니다.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. 글로벌 오브젝트의 함수와 변수를 OER에 바인딩합니다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>글로벌 환경운 동적으로 함수와 변수를 바인딩합니다. 함수와 변수의 추가, 변경이 수시로 발생할 수 있으므로 OER을 사용합니다.&lt;/li>
&lt;/ul></description></item><item><title>몰입! 자바스크립트 - 23장 스코프</title><link>https://jaejin0me.github.io/post/20220203/</link><pubDate>Thu, 03 Feb 2022 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20220203/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2022.02.03 포스팅&lt;/li>
&lt;/ul>
&lt;p>&lt;em>​모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 21 Function 오브젝트 구조, 구성</title><link>https://jaejin0me.github.io/post/20211208/</link><pubDate>Wed, 08 Dec 2021 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211208/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.12.08 포스팅&lt;/li>
&lt;/ul>
&lt;p>&lt;em>드디어.. 아키텍처와 메커니즘 파트로 들어왔네요 ㅎㅎ,&lt;br>
이제부터는 글도 많고 내용도 조금 어렵습니다.&lt;br>
되게 당연한 내용들도 있지만 계속 읽어보면서 익숙해져야 될것 같아요. 끝까지 고고!&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 20 Object 5th 오브젝트</title><link>https://jaejin0me.github.io/post/20211123/</link><pubDate>Tue, 23 Nov 2021 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211123/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.23 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 19 Date 오브젝트</title><link>https://jaejin0me.github.io/post/20211119_2/</link><pubDate>Fri, 19 Nov 2021 17:21:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211119_2/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.19 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 18 Math 오브젝트</title><link>https://jaejin0me.github.io/post/20211119/</link><pubDate>Fri, 19 Nov 2021 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211119/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.19 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 17 Function 오브젝트</title><link>https://jaejin0me.github.io/post/20211117_2/</link><pubDate>Wed, 17 Nov 2021 17:20:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211117_2/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.17 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 16 Function 오브젝트</title><link>https://jaejin0me.github.io/post/20211117/</link><pubDate>Wed, 17 Nov 2021 17:19:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211117/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.17 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 15 JSON 오브젝트</title><link>https://jaejin0me.github.io/post/20211108_2/</link><pubDate>Mon, 08 Nov 2021 17:19:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211108_2/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.08 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 14 Array 5th 오브젝트</title><link>https://jaejin0me.github.io/post/20211108/</link><pubDate>Mon, 08 Nov 2021 17:14:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211108/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.08 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 13 Array 오브젝트</title><link>https://jaejin0me.github.io/post/20211105_2/</link><pubDate>Fri, 05 Nov 2021 17:14:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211105_2/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.05 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 12 Number 오브젝트</title><link>https://jaejin0me.github.io/post/20211105/</link><pubDate>Fri, 05 Nov 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211105/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.11.05 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 11 String 오브젝트</title><link>https://jaejin0me.github.io/post/20211009_2/</link><pubDate>Sat, 09 Oct 2021 20:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211009_2/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.10.09 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>​
&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 10 글로벌 오브젝트</title><link>https://jaejin0me.github.io/post/20211009/</link><pubDate>Sat, 09 Oct 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211009/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.10.08 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>​
&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 09 Object 오브젝트</title><link>https://jaejin0me.github.io/post/20211005/</link><pubDate>Tue, 05 Oct 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211005/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.10.05 포스팅&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>​
&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 08 자바스크립트의 언어적 개념</title><link>https://jaejin0me.github.io/post/20211004/</link><pubDate>Mon, 04 Oct 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20211004/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.10.04 포스팅&lt;/li>
&lt;li>2021.11.25 사소한 수정&lt;/li>
&lt;li>2021.11.26 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 07 문장</title><link>https://jaejin0me.github.io/post/20210930/</link><pubDate>Thu, 30 Sep 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210930/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.09.30 포스팅&lt;/li>
&lt;li>2021.11.25 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 06 비트, 기타 연산자</title><link>https://jaejin0me.github.io/post/20210810/</link><pubDate>Tue, 10 Aug 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210810/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.08.10 포스팅&lt;/li>
&lt;li>2021.11.25 사소한 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 05 관계, 동등, 일치, 논리 연산자</title><link>https://jaejin0me.github.io/post/20210802_2/</link><pubDate>Mon, 02 Aug 2021 17:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210802_2/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.08.02 포스팅&lt;/li>
&lt;li>2021.11.25 약간 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 04 할당, 산술, 단항 연산자</title><link>https://jaejin0me.github.io/post/20210802/</link><pubDate>Mon, 02 Aug 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210802/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.08.01 포스팅&lt;/li>
&lt;li>2021.11.25 약간 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 03 데이터 타입</title><link>https://jaejin0me.github.io/post/20210801/</link><pubDate>Sun, 01 Aug 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210801/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.08.01 포스팅&lt;/li>
&lt;li>2021.11.25 약간 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 02 자바스크립트 문법</title><link>https://jaejin0me.github.io/post/20210725/</link><pubDate>Sun, 25 Jul 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210725/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.07.25 포스팅&lt;/li>
&lt;li>2021.11.25 약간 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분,&lt;br>
다시 한번 되새기고 싶은 부분만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item><item><title>몰입! 자바스크립트 - 01 자바스크립트 개요</title><link>https://jaejin0me.github.io/post/20210720/</link><pubDate>Tue, 20 Jul 2021 07:12:52 +0900</pubDate><guid>https://jaejin0me.github.io/post/20210720/</guid><description>&lt;p>이력&lt;/p>
&lt;ul>
&lt;li>2021.07.20 포스팅&lt;/li>
&lt;li>2021.07.25 약간 수정&lt;/li>
&lt;li>2021.11.25 약간 수정&lt;/li>
&lt;/ul>
&lt;p>&lt;em>그동안 미루고 미뤄왔던 몰입! 자바스크립트를 제대로 보려고 합니다.&lt;br>
매일매일 읽고, 읽는 부분만큼 요약해서 업로드하겠습니다.&lt;br>
개인적인 견해이지만, 참고로 이책은 스펙을 설명하는 내용이 주이기 때문에 지루합니다.&lt;br>
애정을 갖고 봐야 재미를 찾을 수가 있습니다.&lt;br>
모든 내용을 상세히 담으려 하지 않았습니다.&lt;br>
제가 모르는 부분이나, &amp;ldquo;이런 것도 있었어?&amp;rdquo; 하는 부분, 중요하다고 생각되는 부분들만 기록했습니다.&lt;br>
읽어주셔서 감사합니다.&lt;/em>&lt;/p></description></item></channel></rss>